skip to content you signed in with another tab or window. reload to refresh your session. you signed out in another tab or window. reload to refresh your session. you switched accounts on another tab or window. reload to refresh your session. dismiss alert ros2 / rcl public notifications you must be signed in to change notification settings fork 162 star 128 new issue have a question  this project?  for a free github account to open an issue and  its maintainers and the community.  for github by clicking  for github, you agree to our  of service and  statement . well occasionally send you account related s. already on github?  to your account jump to bottom support yaml string tag '!!str' #999 merged fujitatomoya merged 3 commits into ros2 : rolling from barry-xu-2018 : topic-fix-parameter-yaml-parser jan 4, 2023 merged support yaml string tag '!!str' #999 fujitatomoya merged 3 commits into ros2 : rolling from barry-xu-2018 : topic-fix-parameter-yaml-parser jan 4, 2023 conversation copy link contributor barry-xu-2018 commented aug 17, 2022  edited loading address ros2/rclcpp#1983 support ros2 run pkg_name exe_name --ros-args -p ' calib:=!!str yes ' sorry, something went wrong. all reactions fujitatomoya approved these changes aug 17, 2022 view reviewed changes copy link collaborator fujitatomoya left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment lgtm with one confirmation for test. sorry, something went wrong. all reactions rcl_yaml_param_parser/test/correct_config.yaml outdated show resolved hide resolved iuhilnehc-ynos reviewed aug 18, 2022 view reviewed changes rcl_yaml_param_parser/src/parse.c outdated show resolved hide resolved barry-xu-2018 mentioned this pull request aug 19, 2022 "yes" and "no" string parameters are confused for bool parameters ros2/rclcpp#1983 closed copy link contributor author barry-xu-2018 commented aug 24, 2022 @clalancette could you help to review this pr? all reactions sorry, something went wrong. iuhilnehc-ynos mentioned this pull request aug 30, 2022 remove comments from yaml file before applying substitutions ros2/launch_ros#322 open fujitatomoya requested a review from clalancette december 7, 2022 18:05 clalancette self-assigned this dec 22, 2022 clalancette requested changes dec 22, 2022 view reviewed changes rcl_yaml_param_parser/src/parse.c outdated show resolved hide resolved rcl_yaml_param_parser/test/correct_config.yaml outdated show resolved hide resolved barry-xu-2018 requested review from audrow , ivanpauno and wjwwood as code owners december 23, 2022 07:02 barry-xu-2018 added 3 commits december 23, 2022 15:03 support yaml string tag '!!str'  e075f55 signed-off-by: barry xu <barry.xu@sony.com> address review comments  55fd74a signed-off-by: barry xu <barry.xu@sony.com> update based on review comments  6b516f0 signed-off-by: barry xu <barry.xu@sony.com> barry-xu-2018 force-pushed the topic-fix-parameter-yaml-parser branch from 9f0d45a to 6b516f0 compare december 23, 2022 07:07 copy link contributor author barry-xu-2018 commented dec 23, 2022 rebase code all reactions sorry, something went wrong. copy link contributor author barry-xu-2018 commented dec 23, 2022 @clalancette thanks for your comments. i updated code. all reactions sorry, something went wrong. clalancette approved these changes dec 23, 2022 view reviewed changes copy link contributor clalancette left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment this looks good to me with green ci. sorry, something went wrong. all reactions copy link collaborator fujitatomoya commented dec 24, 2022 ci: linux linux-aarch64 windows all reactions sorry, something went wrong. copy link member ivanpauno commented jan 2, 2023 do we really need this? using "yes" or "no" (i.e. between quotes) should be enough. if the quoted version is being converted to a bool, then that should be fixed. but the addition of !!str seems unnecessary imho. it's still fine to have it though, but it may be confusing to only support the !!str tag. all reactions sorry, something went wrong. copy link contributor clalancette commented jan 2, 2023 if the quoted version is being converted to a bool, then that should be fixed. the problem is that there is fundamentally no way to fix it. the yaml specification states that if it sees "yes" or "no", it automatically casts the value to a boolean type. further, the yaml specification specially allows for !!str , exactly to handle this situation. see the spec in https://yaml.org/spec/1.2.2/ . the yaml specification actually allows for forcing any type, via something like !!bool , which this isn't supporting. there is an argument to be made that we should support that as well, but i think that !!str is by far the most likely one to be practically needed. i'd leave the rest of it for future work.  2 barry-xu-2018 and fujitatomoya reacted with thumbs up emoji all reactions  2 reactions sorry, something went wrong. copy link member ivanpauno commented jan 3, 2023 the problem is that there is fundamentally no way to fix it. the yaml specification states that if it sees "yes" or "no", it automatically casts the value to a boolean type. that only applies if the value is unquoted. e.g. import yaml yaml . safe_load ( "{string_val: 'yes', boolean_val: yes}" ) the regex of the specification also only matches unquoted values, see https://yaml.org/spec/1.2.2/#1022-tag-resolution (10.2.2 doesn't support yes as a boolean though, that's from older specs). that's why supporting !!str seems unnecessary imo. the library we're using allows you to check if the value is quoted or not: rcl/rcl_yaml_param_parser/src/parse.c lines 98 to 99 in 6b516f0 if ( style != yaml_single_quoted_scalar_style && style != yaml_double_quoted_scalar_style ) we're actually using that for booleans, so i'm not sure if there's something wrong in the logic. all reactions sorry, something went wrong. copy link collaborator fujitatomoya commented jan 3, 2023 that only applies if the value is unquoted. as mentioned ros2/rclcpp#1983 (comment) , this is correct. that's why supporting !!str seems unnecessary imo. direct solution against ros2/rclcpp#1983 , it would be easier just to add quote for user? at least that what i would do instead of adding !!str tag before string. having !!str in rcl yaml parse is nothing wrong, and probably unnecessary for most users, but someone still might do that since it is in yaml specification tag? @barry-xu-2018 @iuhilnehc-ynos what do you think? all reactions sorry, something went wrong. copy link member ivanpauno commented jan 3, 2023 having !!str in rcl yaml parse is nothing wrong, and probably unnecessary for most users, but someone still might do that since it is in yaml specification tag? yes, it's also fine to have tags. it's confusing to only support one tag though. but it still seems okay. i wasn't sure if the option of quoting the value was mentioned or not. all reactions sorry, something went wrong. copy link contributor author barry-xu-2018 commented jan 4, 2023 direct solution against ros2/rclcpp#1983 , it would be easier just to add quote for user? yeah. it is more convenient for users. but someone still might do that since it is in yaml specification tag? '!!str' is defined in yaml specification. so user may use it. if yaml tag isn't supported, we should tell users this limitation and workaround way in the user manual. if tag is supported, we should support all tags defined in yaml specification.  1 ivanpauno reacted with thumbs up emoji all reactions  1 reaction sorry, something went wrong. ivanpauno approved these changes jan 4, 2023 view reviewed changes copy link member ivanpauno left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment lgtm! sorry, something went wrong. all reactions fujitatomoya merged commit d651a5c into ros2 : rolling jan 4, 2023 fujitatomoya mentioned this pull request jan 4, 2023 yaml tag full support in rcl_yaml_param_parser #1026 open copy link collaborator fujitatomoya commented jan 4, 2023 created follow-up issue on #1026 all reactions sorry, something went wrong.  for free to join this conversation on github . already have an account?  to comment reviewers fujitatomoya fujitatomoya approved these changes iuhilnehc-ynos iuhilnehc-ynos left review comments clalancette clalancette approved these changes ivanpauno ivanpauno approved these changes audrow awaiting requested review from audrow audrow is a code owner wjwwood awaiting requested review from wjwwood wjwwood is a code owner assignees clalancette labels none yet projects none yet milestone no milestone development successfully merging this pull request may close these issues. 5 participants add this suggestion to a batch that can be applied as a single commit. this suggestion is invalid because no changes were made to the code. suggestions cannot be applied while the pull request is closed. suggestions cannot be applied while viewing a subset of changes. only one suggestion per line can be applied in a batch. add this suggestion to a batch that can be applied as a single commit. applying suggestions on deleted lines is not supported. you must change the existing code in this line in order to create a valid suggestion. outdated suggestions cannot be applied. this suggestion has been applied or marked resolved. suggestions cannot be applied from pending reviews. suggestions cannot be applied on multi-line comments. suggestions cannot be applied while the pull request is queued to merge. suggestion cannot be applied right now.  check back later. you cant perform that action at this time.