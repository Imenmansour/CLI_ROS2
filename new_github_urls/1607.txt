skip to content you signed in with another tab or window. reload to refresh your session. you signed out in another tab or window. reload to refresh your session. you switched accounts on another tab or window. reload to refresh your session. dismiss alert ros2 / rosbag2 public notifications you must be signed in to change notification settings fork 244 star 272 new issue have a question  this project?  for a free github account to open an issue and  its maintainers and the community.  for github by clicking  for github, you agree to our  of service and  statement . well occasionally send you account related s. already on github?  to your account jump to bottom add option to disable recorder keyboard controls #1607 merged michaelorlov merged 2 commits into ros2 : rolling from berndpfrommer : recorder_disable_keyboard_controls apr 14, 2024 merged add option to disable recorder keyboard controls #1607 michaelorlov merged 2 commits into ros2 : rolling from berndpfrommer : recorder_disable_keyboard_controls apr 14, 2024 conversation copy link contributor berndpfrommer commented apr 10, 2024 currently only the player node has an option to disable the keyboard control. this pr adds the same feature to the recorder node. when i instantiate the recorder within c++ as a node and directly run it with e.g. a singlethreaded executor, it messes up my terminal to the point that i can no longer read the output and need to reset the terminal. very annoying. also, i don't want to see output  allowed keystrokes in my log files. this output may have made sense when the recorder was only run from the cli, but now that the recorder is a bona-fide composable node, the logging is unwanted. it turns out that already instantiating (not just using) a keyboardhandler messes up my terminal, so this pr avoids creating a keyboardhandler altogether when record_options.disable_keyboard_controls is true. sorry, something went wrong. all reactions berndpfrommer requested a review from a team as a code owner april 10, 2024 21:06 berndpfrommer requested review from gbiggs and jhdcs and removed request for a team april 10, 2024 21:06 berndpfrommer force-pushed the recorder_disable_keyboard_controls branch from 3230d8b to 7b8f375 compare april 10, 2024 21:09 michaelorlov changed the title added option to disable recorder keyboard controls add option to disable recorder keyboard controls apr 13, 2024 copy link contributor michaelorlov commented apr 13, 2024 hi @berndpfrommer i am the author of the keyboardhandler package. as regards: it turns out that already instantiating (not just using) a keyboardhandler messes up my terminal, so this pr avoids creating a keyboardhandler altogether when record_options.disable_keyboard_controls is true. it messes up your terminal because we instantiate keyboardhandler with a disabled signals handler inside. because we used to handle sigterm and sigint signals in the rosbag2 python wrapper layer and gracefully finish the recorder and player. rosbag2/rosbag2_transport/src/rosbag2_transport/recorder.cpp lines 748 to 753 in 1bb7a0e # ifndef _win32 auto keyboard_handler = std::make_shared<keyboardhandler>( false ); # else // we don't have signal handler option in constructor for windows version auto keyboard_handler = std::shared_ptr<keyboardhandler>( new keyboardhandler ()); # endif however, in the cases when rosbag2 recorder or player instantiating via composition signals are not handled by the rosbag2 anymore. therefore need to instantiate the keyboardhandler class in those cases with install_signal_handlere parameter equal to true see description for keyboardhandler constructor here https://github.com/ros-tooling/keyboard_handler/blob/13072acb5c4c07b3ad220b2bb7bd3f3080824414/keyboard_handler/include/keyboard_handler/keyboard_handler_unix_impl.hpp#l48-l55 /// \note in case if install_signal_handler is false caller code should call static /// keyboardhandleruniximpl::restore_buffer_mode_for_stdin() in case of process termination /// caused by signal arrival. all reactions sorry, something went wrong. added option to disable recorder keyboard controls  6e988b7 signed-off-by: bernd pfrommer <bernd.pfrommer@gmail.com> michaelorlov force-pushed the recorder_disable_keyboard_controls branch from 7b8f375 to 6e988b7 compare april 13, 2024 23:44 michaelorlov approved these changes apr 14, 2024 view reviewed changes copy link contributor michaelorlov left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment @berndpfrommer lgtm after adding a lot more above your original commit. i've made a rebase on top of the latest rolling and made the following changes: add cli option --disable-keyboard-controls for rosbag2 recorder instantiate keyboardhandler with installed signal handler by default in the recorded and player constructors to mitigate issues when ctrl+c not handled on upper layers as when player and recorder constructed via composition. explicitly construct keyboardhandler with disabled signal handler from rosbag2_py layer since we have our own signals handler on that layer. add test coverage for parameters parser for disable_keyboard_controls parameters. regenerate python stub files (.pyi) for rosbag2_py package.  review and test that it works as you expected. with the latest fixes recorder and player shall not "mess up" terminal output when player or recorder constructed via composition even with disable_keyboard_controls = false sorry, something went wrong. all reactions fixes per code review for disable keyboard controls for recorder  85d9c93 - add cli option --disable-keyboard-controls for rosbag2 recorder - instantiate keyboardhandler with installed signal handler by default in the recorded and player constructors to mitigate issues when ctrl+c not handled on upper layers as when player and recorder constructed via composition. - explicitly construct keyboardhandler with disabled signal handler from rosbag2_py layer since we have our own signals handler on that layer. - add test coverage for parameters parser for disable_keyboard_controls parameters. - regenerate python stub files (.pyi) for rosbag2_py package. signed-off-by: michael orlov <michael.orlov@apex.ai> michaelorlov force-pushed the recorder_disable_keyboard_controls branch from 8e02417 to 85d9c93 compare april 14, 2024 01:20 copy link contributor michaelorlov commented apr 14, 2024 gist: https://gist.githubusercontent.com/michaelorlov/43a20975aa8e739bcbce1d49a7a02379/raw/ec8c69bbd8e43a7ed596cd692b447bff7983a981/ros2.repos build args: --packages-above-and-dependencies ros2bag rosbag2_py rosbag2_transport rosbag2_tests test args: --packages-above ros2bag rosbag2_py rosbag2_transport rosbag2_tests ros distro: rolling job: ci_launcher ci_launcher ran: https://ci.ros2.org/job/ci_launcher/13696 linux linux-aarch64 windows all reactions sorry, something went wrong. berndpfrommer commented apr 14, 2024 view reviewed changes rosbag2_transport/src/rosbag2_transport/recorder.cpp show resolved hide resolved copy link contributor author berndpfrommer commented apr 14, 2024 wow. what happened to my little pr :) ? thanks for fixing this so quickly, and fixing the player as well. i don't really know the code base well enough to make a meaningful review, but i will test on monday (on the command line and by instantiating the nodes in c++ code). all reactions sorry, something went wrong. copy link contributor michaelorlov commented apr 14, 2024  edited loading @berndpfrommer thanks for the review. i am sorry, i don't have time for nitpick. if we want this fix to be in the jazzy release we need to merge it today. all reactions sorry, something went wrong. hide details view details michaelorlov merged commit 4882d30 into ros2 : rolling apr 14, 2024 14 checks passed copy link contributor author berndpfrommer commented apr 15, 2024 giving up on trying to test this. i cannot build anymore on ubuntu 22.04/rolling without complete build from source. the version upgrade to yaml-cpp #1605 also requires updating a whole bunch of other stuff, including eventually rclcpp. testing must wait until the other dependencies have settled down and i have a stable build environment again that does not involve compiling the entire distro from source. delaying testing until noble is released. all reactions sorry, something went wrong. copy link contributor michaelorlov commented apr 15, 2024 @berndpfrommer hmm. i always compile from sources. however, on my ubuntu 22.04/rolling setup i found out that need to install liblz4-dev before trying to build code after the recent updates sudo apt install liblz4-dev . don't know if it specific to my local setup. all reactions sorry, something went wrong.  for free to join this conversation on github . already have an account?  to comment reviewers michaelorlov michaelorlov approved these changes gbiggs awaiting requested review from gbiggs gbiggs is a code owner automatically assigned from ros2/tooling-reviewers jhdcs awaiting requested review from jhdcs jhdcs is a code owner automatically assigned from ros2/tooling-reviewers assignees no one assigned labels none yet projects none yet milestone no milestone development successfully merging this pull request may close these issues. 2 participants add this suggestion to a batch that can be applied as a single commit. this suggestion is invalid because no changes were made to the code. suggestions cannot be applied while the pull request is closed. suggestions cannot be applied while viewing a subset of changes. only one suggestion per line can be applied in a batch. add this suggestion to a batch that can be applied as a single commit. applying suggestions on deleted lines is not supported. you must change the existing code in this line in order to create a valid suggestion. outdated suggestions cannot be applied. this suggestion has been applied or marked resolved. suggestions cannot be applied from pending reviews. suggestions cannot be applied on multi-line comments. suggestions cannot be applied while the pull request is queued to merge. suggestion cannot be applied right now.  check back later. you cant perform that action at this time.