skip to content you signed in with another tab or window. reload to refresh your session. you signed out in another tab or window. reload to refresh your session. you switched accounts on another tab or window. reload to refresh your session. dismiss alert ros2 / rcutils public notifications you must be signed in to change notification settings fork 100 star 56 new issue have a question  this project?  for a free github account to open an issue and  its maintainers and the community.  for github by clicking  for github, you agree to our  of service and  statement . well occasionally send you account related s. already on github?  to your account jump to bottom optimize the implementation of rcutils_char_array_strncpy. #367 merged clalancette merged 1 commit into rolling from clalancette/optimize-char-array-strncpy jul 15, 2022 merged optimize the implementation of rcutils_char_array_strncpy. #367 clalancette merged 1 commit into rolling from clalancette/optimize-char-array-strncpy jul 15, 2022 conversation copy link contributor clalancette commented jul 13, 2022 it turns out that this function is used a lot in the rcutils logging code, so it is on a hot-path. thus it is worth optimizing. the optimization itself consists of recognizing that the current implementation of rcutils_char_array_strncpy is calling strlen twice; once explicitly at the beginning of the function, and then again implicitly while calling strncat. however, it turns out that we don't need to recalculate the length either time; we already know that information based on the buffer_length. thus we use the information we already have and speed up the calculation, particularly for long strings. signed-off-by: chris lalancette clalancette@openrobotics.org in my local testing, i found (using perf ) that this patch significantly cuts down on the number of strlen invocations. for very long strings, this can be up to 40% faster (for shorter strings, the speed increase is more modest, around 10%). i'll note that this also fixes a subtle bug in the interaction of rcutils_char_array_memcpy and rcutils_char_array_strncat . previously, if you ended up calling rcutils_char_array_memcpy and did not copy a '\0' in, then a following call to rcutils_char_array_strncat would run off into arbitrary memory looking for a '\0' during the strlen call. while this sequence of calls would be a strange usage, it would cause ub before. now it would work properly. sorry, something went wrong.  1 christophebedard reacted with rocket emoji all reactions  1 reaction optimize the implementation of rcutils_char_array_strncpy.  1400151 it turns out that this function is used a lot in the rcutils logging code, so it is on a hot-path. thus it is worth optimizing. the optimization itself consists of recognizing that the current implementation of rcutils_char_array_strncpy is calling strlen twice; once explicitly at the beginning of the function, and then again implicitly while calling strncat. however, it turns out that we don't need to recalculate the length either time; we already know that information based on the buffer_length. thus we use the information we already have and speed up the calculation, particularly for long strings. signed-off-by: chris lalancette <clalancette@openrobotics.org> copy link contributor author clalancette commented jul 13, 2022 full ci: linux linux-aarch64 windows all reactions sorry, something went wrong. audrow approved these changes jul 13, 2022 view reviewed changes copy link member audrow left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment looks good to me! sorry, something went wrong. all reactions copy link contributor author clalancette commented jul 13, 2022  edited loading just because this is touching such a low-level piece of code, here is ci on rhel and windows debug as well: rhel windows debug  1 audrow reacted with thumbs up emoji all reactions  1 reaction sorry, something went wrong. copy link contributor author clalancette commented jul 15, 2022 the rhel failure is a known flake. with everything else being green, i'm going to go ahead and merge this. all reactions sorry, something went wrong. clalancette merged commit 8564fa1 into rolling jul 15, 2022 delete-merged-branch bot deleted the clalancette/optimize-char-array-strncpy branch july 15, 2022 13:14 clalancette mentioned this pull request oct 12, 2022 added initial version of logging.md file. ros2/design#315 open  for free to join this conversation on github . already have an account?  to comment reviewers audrow audrow approved these changes assignees no one assigned labels none yet projects none yet milestone no milestone development successfully merging this pull request may close these issues. 2 participants add this suggestion to a batch that can be applied as a single commit. this suggestion is invalid because no changes were made to the code. suggestions cannot be applied while the pull request is closed. suggestions cannot be applied while viewing a subset of changes. only one suggestion per line can be applied in a batch. add this suggestion to a batch that can be applied as a single commit. applying suggestions on deleted lines is not supported. you must change the existing code in this line in order to create a valid suggestion. outdated suggestions cannot be applied. this suggestion has been applied or marked resolved. suggestions cannot be applied from pending reviews. suggestions cannot be applied on multi-line comments. suggestions cannot be applied while the pull request is queued to merge. suggestion cannot be applied right now.  check back later. you cant perform that action at this time.