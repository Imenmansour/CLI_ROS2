skip to content you signed in with another tab or window. reload to refresh your session. you signed out in another tab or window. reload to refresh your session. you switched accounts on another tab or window. reload to refresh your session. dismiss alert ros2 / rcutils public notifications you must be signed in to change notification settings fork 100 star 56 new issue have a question  this project?  for a free github account to open an issue and  its maintainers and the community.  for github by clicking  for github, you agree to our  of service and  statement . well occasionally send you account related s. already on github?  to your account jump to bottom avoid dynamic memory allocation during error handling #121 merged wjwwood merged 20 commits into master from dynamic_memory_free_error_handling nov 2, 2018 merged avoid dynamic memory allocation during error handling #121 wjwwood merged 20 commits into master from dynamic_memory_free_error_handling nov 2, 2018 conversation copy link member wjwwood commented oct 29, 2018  edited loading this pull request refactors the way the error handling api in rcutils works so that it does not use dynamic memory and there does not need an allocator in most cases and also should make it easier to use in real-time and high performance situations. overview of major changes: rcutils_error_state_t now uses fixed length strings the formatted error string ( rcutils_get_error_string() ) returns a fixed sized string error string formatting no longer uses snprintf, and instead uses custom functions which explicitly avoid memory allocations there's no longer an rcutils_get_error_string_safe() as you cannot get a nullptr for the error string anymore (so it's always "safe") suppression of the warning  overriding the current error now does a string compare this is ok from a performance perspective since it is only checked when the error state is set (it was not cleared before setting it again) this is slightly less optimal than a direct pointer comparison because it could incorrectly suppress the warning when setting the same error message in a loop (same string, not same pointer) a new method rcutils_initialize_error_handling_thread_local_storage is required to be called in new threads in order to avoid memory allocations in other functions it is the only function that takes an allocator now, and it is only used in certain cases the pthread implementation was removed it complicated the implementation significantly i'm not sure it needed anymore, see: add support for pthread-based thread local storage rmw#80 (comment) i'd prefer an entirely separate implementation in a separate file if we need to resurrect pthread support i've documented the use of dynamic memory allocation for each function and tested it with the memory testing tools in osrf_testing_tools_cpp . main migration issues: code which previously did rcutils_get_error_string_safe() will need to change to rcutils_get_error_string().str (so long as the temporary is ok) to avoid the temporary, they'll need to do something like rcutils_error_string_t copy = rcutils_get_error_string(); ) the error set macros which previously required that you pass an allocator no longer takes an allocator, e.g. change rcutils_set_error_msg("char array has no valid allocator", error_msg_allocator); -> rcutils_set_error_msg("char array has no valid allocator"); these changes are annoying, but i think ultimately they're for the better. i considered keeping existing signatures and doing tick-tock, and that's an option of the macro's which take allocators, but not so for the get error string signature, since it needs to return the copy to the fixed sized string. i decided against doing it for the macros because it would require using a separate name for the new macros and because deprecating them is not easy in pure c. i have a lot more changes up and down the stack due to these api changes, and i'll open pull requests for those once i get feedback on the proposed changes here. /cc @serge-nikulin fyi sorry, something went wrong. all reactions wjwwood added 2 commits october 29, 2018 10:52 refactor error_state to be fixed sized and api to avoid memory alloca  160b3df tion signed-off-by: william woodall <william@osrfoundation.org> use new rcutils error handling api  330cf30 signed-off-by: william woodall <william@osrfoundation.org> wjwwood added enhancement new feature or request in review waiting for review (kanban column) labels oct 29, 2018 wjwwood added this to the crystal milestone oct 29, 2018 wjwwood self-assigned this oct 29, 2018 wjwwood mentioned this pull request oct 29, 2018 added convenience header for using memory tools with gtest osrf/osrf_testing_tools_cpp#17 merged support c99 as well  086352e signed-off-by: william woodall <william@osrfoundation.org> wjwwood mentioned this pull request oct 29, 2018 use new error handling api ros2/rmw#153 merged copy link member author wjwwood commented oct 29, 2018 here's the first "downstream" pull request due to these api changes: ros2/rmw#153 all reactions sorry, something went wrong. dirk-thomas reviewed oct 29, 2018 view reviewed changes include/rcutils/error_handling.h outdated show resolved hide resolved remove const in strings  efc9ac8 signed-off-by: william woodall <william@osrfoundation.org> wjwwood mentioned this pull request oct 30, 2018 use new error handling api from rcutils ros2/rmw_fastrtps#231 merged remove use of const casting  d6aa667 signed-off-by: william woodall <william@osrfoundation.org> this was referenced oct 30, 2018 use new error handling api from rcutils ros2/rmw_connext#306 merged use new error handling api from rcutils ros2/rmw_opensplice#245 merged use new error handling api from rcutils ros2/rcl#314 merged use new error handling api from rcutils ros2/rclpy#245 merged use new error handling api from rcutils ros2/rclcpp#577 merged use new error handling api from rcutils ros2/demos#284 merged use new error handling api from rcutils ros2/system_tests#306 merged use new error handling api from rcutils ros2/ros1_bridge#141 merged copy link member author wjwwood commented oct 30, 2018 ci to see what's missing/broken: linux linux-aarch64 macos windows all reactions sorry, something went wrong. clalancette reviewed oct 30, 2018 view reviewed changes copy link contributor clalancette left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment overall, i like the change. this initial review has some details that i came across, plus a couple of questions. i can do a bit more reviewing for it later. sorry, something went wrong. all reactions include/rcutils/error_handling.h outdated show resolved hide resolved include/rcutils/error_handling.h outdated show resolved hide resolved include/rcutils/error_handling.h show resolved hide resolved include/rcutils/error_handling.h show resolved hide resolved include/rcutils/error_handling.h outdated show resolved hide resolved 3 hidden conversations load more include/rcutils/error_handling.h outdated show resolved hide resolved src/error_handling_helpers.h show resolved hide resolved src/error_handling_helpers.h outdated show resolved hide resolved src/error_handling_helpers.h show resolved hide resolved src/error_handling.c outdated show resolved hide resolved wjwwood added 5 commits october 30, 2018 18:46 fix warning  736d406 signed-off-by: william woodall <william@osrfoundation.org> fix docs and typos  218a99d signed-off-by: william woodall <william@osrfoundation.org> fix compiler error due to missing include  ac88bfd signed-off-by: william woodall <william@osrfoundation.org> wrap macros in do { } while(0), refactors in subsequent commits  0ca6602 signed-off-by: william woodall <william@osrfoundation.org> use semicolons after macros  30cd5cb signed-off-by: william woodall <william@osrfoundation.org> wjwwood mentioned this pull request oct 30, 2018 use semicolons after macros ros2/rmw_implementation#47 merged wjwwood added 6 commits october 30, 2018 19:23 uncrustify  c1d32ed signed-off-by: william woodall <william@osrfoundation.org> typo  622740f signed-off-by: william woodall <william@osrfoundation.org> make error handling helpers static, mark as internal, and assert assu  659a63b mptions signed-off-by: william woodall <william@osrfoundation.org> fix warnings and errors  cd4f516 signed-off-by: william woodall <william@osrfoundation.org> trying to suppress warning on macos 1e54e41 trying to suppress warning on macos 31479bf copy link member author wjwwood commented nov 1, 2018 new ci: linux linux-aarch64 macos windows also, opensplice: linux all reactions sorry, something went wrong. copy link member author wjwwood commented nov 1, 2018 i had to rebase a few repositories due to recent merges, so here's new ci: linux linux-aarch64 macos windows all reactions sorry, something went wrong. copy link member author wjwwood commented nov 1, 2018 the only test failure was due to the launch problem. also the job is marked as failing, but the job finished (no compiler error). @mjcarroll all reactions sorry, something went wrong. copy link member author wjwwood commented nov 1, 2018 this is waiting on ros2/launch#153 to have clean ci, but otherwise i believe ci is good for this set of pull requests and ready for review. all reactions sorry, something went wrong. jacobperron approved these changes nov 1, 2018 view reviewed changes copy link member jacobperron left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment some minor comments, but lgtm pending ci. sorry, something went wrong. all reactions src/error_handling_helpers.h show resolved hide resolved src/error_handling.c show resolved hide resolved src/error_handling.c show resolved hide resolved handle zero str length in reverse string  7489b61 signed-off-by: william woodall <william@osrfoundation.org> copy link member author wjwwood commented nov 1, 2018 ci: linux linux-aarch64 macos windows all reactions sorry, something went wrong. sloretz reviewed nov 1, 2018 view reviewed changes copy link contributor sloretz left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment minor comments, feel free to ignore sorry, something went wrong. all reactions include/rcutils/error_handling.h outdated show resolved hide resolved include/rcutils/error_handling.h outdated show resolved hide resolved src/error_handling.c show resolved hide resolved src/error_handling_helpers.h outdated show resolved hide resolved src/error_handling_helpers.h outdated show resolved hide resolved test/test_error_handling_helpers.cpp outdated show resolved hide resolved wjwwood added 2 commits november 1, 2018 18:35 address review feedback  38e504d signed-off-by: william woodall <william@osrfoundation.org> avoid fprintf and fix warning  overwriting  dc725ec signed-off-by: william woodall <william@osrfoundation.org> copy link member author wjwwood commented nov 1, 2018 ok i think i addressed all of the feedback, can you guys give it a another look. all reactions sorry, something went wrong. copy link member author wjwwood commented nov 1, 2018 optimistic ci, pending feedback on the new changes: linux linux-aarch64 macos windows linux (opensplice) all reactions sorry, something went wrong. sloretz approved these changes nov 1, 2018 view reviewed changes copy link contributor sloretz left a comment there was a problem hiding this comment. choose a reason for hiding this comment the reason will be displayed to describe this comment to others. learn more . choose a reason spam abuse off topic outdated duplicate resolved hide comment lgtm sorry, something went wrong. all reactions src/error_handling.c outdated show resolved hide resolved remove unnecessary call f81a5c8 copy link member author wjwwood commented nov 2, 2018 ok, i'm going to take my window to merge. i'm happy to follow up with changes in new pr's if needed. all reactions sorry, something went wrong. wjwwood merged commit f8c58a1 into master nov 2, 2018 wjwwood deleted the dynamic_memory_free_error_handling branch november 2, 2018 02:07 wjwwood removed the in review waiting for review (kanban column) label nov 2, 2018 sloretz mentioned this pull request dec 14, 2018 rcl get error string api changed ros2/ros2_documentation#74 merged  for free to join this conversation on github . already have an account?  to comment reviewers clalancette clalancette left review comments jacobperron jacobperron approved these changes dirk-thomas dirk-thomas left review comments sloretz sloretz approved these changes assignees wjwwood labels enhancement new feature or request projects none yet milestone crystal development successfully merging this pull request may close these issues. 5 participants add this suggestion to a batch that can be applied as a single commit. this suggestion is invalid because no changes were made to the code. suggestions cannot be applied while the pull request is closed. suggestions cannot be applied while viewing a subset of changes. only one suggestion per line can be applied in a batch. add this suggestion to a batch that can be applied as a single commit. applying suggestions on deleted lines is not supported. you must change the existing code in this line in order to create a valid suggestion. outdated suggestions cannot be applied. this suggestion has been applied or marked resolved. suggestions cannot be applied from pending reviews. suggestions cannot be applied on multi-line comments. suggestions cannot be applied while the pull request is queued to merge. suggestion cannot be applied right now.  check back later. you cant perform that action at this time.