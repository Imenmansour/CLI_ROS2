| support | answers.ros.org search: [ rep index ] [ rep source ] rep: 2000 title: ros 2 releases and target platforms author: mikael arguedas <mikael at openrobotics.org>, steven! ragnarok <steven at openrobotics.org>, dirk thomas <dthomas at openrobotics.org>, audrow nash <audrow at openrobotics.org>, geoffrey biggs <geoff at openrobotics.org>, marco a. gutierrez <marcogg at marcogg.com> status: active type: informational content-type: text/x-rst created: 10-apr-2018, 24-apr-2018, 21-may-2018, 10-dec-2018, 20-may-2019, 21-may-2019, 29-aug-2019, 25-feb-2020, 18-nov-2021, 10-nov-2022, 10-nov-2023 contents abstract release schedule frequency targeted platforms support lts releases non-lts releases releases and support duration support tiers platforms by distribution ardent apalone (december 2017 - december 2018) bouncy bolson (june 2018 - june 2019) crystal clemmys (december 2018 - december 2019) dashing diademata (may 2019 - may 2021) eloquent elusor (november 2019 - november 2020) foxy fitzroy (may 2020 - may 2023) galactic geochelone (may 2021 - november 2022) humble hawksbill (may 2022 - may 2027) iron irwini (may 2023 - november 2024) jazzy jalisco (may 2024 - may 2029) rolling ridley (june 2020 - ongoing) motivation rationale references and footnotes  abstract this rep defines the timeline for future ros 2 releases as well as the targeted platforms for each specific one. we define platforms to include both operating system releases (e.g. ubuntu xenial (16.04 lts)) as well as major language releases (e.g. python 3.5). the target platforms represent the set on which all core stacks are expected to work. exceptions can be made for stacks that are intentionally platform-specific. release schedule note the following applies to ros 2 releases after foxy. prior to foxy, releases were made more frequently but with shorter support due to the fact that many foundational parts of ros 2 were still being heavily developed. frequency new ros 2 releases will be published in a time based fashion every 12 months . the rationale is that a shorter cycle (like 6 months) results in significant overhead and potentially many active releases at the same time (assuming they have the same support length). on the other hand a longer cycle (like 2 years) is too long for users to wait for new features to be available in a ros 2 release. targeted platforms since regular ubuntu releases are only supported for 9 months ros 2 will not target those. a single ros 2 distribution will only have full tier 1 support for a single ubuntu lts. the rationale is that fully supporting two lts versions - which means 2-year-different versions of upstream dependencies - is a tremendous overhead and sometimes even impossible. on a case-by-case basis, a ros 2 distribution may support an older ubuntu lts distribution as a tier 3, community-supported platform. since macos (or at least brew) as well as windows are rolling platforms we aim to support the latest version available at the time of a ros 2 distribution release. for debian we also aim to target the latest stable version though if that version is two years behind the ubuntu version that might not be possible. support lts releases since ubuntu lts releases come with 5 years of standard support we aim to match the same duration. in even years new ros 2 releases will happen one month after the ubuntu lts has been released (which usually means a ros 2 release in may). the ros 2 release will be supported until the end of the standard support of the ubuntu lts release which is 4 years and 11 months from the ros 2 release date. non-lts releases in order to provide frequent releases to the community, in odd years a non-lts ros 2 release will be published. it will always target the same ubuntu lts as the previous ros 2 lts release but will only be supported for 1.5 years . this duration ensures that the non-lts will overlap with the next ros lts release by 6 months to provide a long enough transition window. releases and support duration may 2021: g turtle: non-lts release, supported for 1.5 years may 2022: h turtle: lts release, supported for 5 years may 2023: i turtle: non-lts release, supported for 1.5 years may 2024: j turtle: lts release, supported for 5 years and so on, alternating annually between lts and non-lts releases support tiers platforms are defined as a combination of the os, the architecture, and the rmw implementation. by default the tiers are expected to apply up to the desktop variant in a rosdistro, unless otherwise specified. ros 2 variants are defined in rep 2001 [3] . tier 1 tier 1 platforms are subjected to our unit test suite and other testing tools on a frequent basis including continuous integration jobs, nightly jobs, packaging jobs, and performance testing. errors or bugs discovered in these platforms are prioritized for correction by the development team. significant errors discovered in tier 1 platforms can impact release dates and we strive to resolve all known high priority errors in tier 1 platforms prior to new version releases. tier 2 tier 2 platforms are subject to periodic ci testing which runs both builds and tests with publicly accessible results. the ci is expected to be run at least within a week of relevant changes for the current state of the ros distribution. package-level binary packages may not be provided but providing a downloadable archive of the built workspace is encouraged. errors may be present in released product versions for tier 2 platforms. known errors in tier 2 platforms will be addressed subject to resource availability on a best effort basis and may or may not be corrected prior to new version releases. one or more entities should be committed to continuing support of the platform. tier 3 tier 3 platforms are those for which community reports indicate that the release is functional. the development team does not run the unit test suite or perform any other tests on platforms in tier 3. installation instructions should be available and up-to-date in order for a platform to be listed in this category. community members may provide assistance with these platforms. platforms by distribution if planned support for a target platform is changed, notice will be sent to discourse to enable discussion of this issue. ardent apalone (december 2017 - december 2018) required support architecture ubuntu xenial (16.04) macos sierra (10.12) windows 10 (vs2015) amd64 x x x arm64 x minimum language requirements: c11 [2] c++14 python 3.5 dependency requirements: package ubuntu xenial macos** windows 10** cmake 3.5.1 3.11.0 3.10.2 empy 3.3.2 3.6.5 3.3.2 ogre 1.10* 1.10* 1.10* opencv 2.4.9 3.4.1 2.4.13.2* poco 1.7.7* 1.7.7* 1.7.7* python 3.5.1 3.6.5 3.6.4 qt 5.5.1 5.10.0 5.10.0 linux only (used for turtlebot demo) pcl 1.7.2 n/a n/a " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " rolling distributions will see multiple version changes of these dependencies during their lifetime. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu xenial: apt macos: homebrew, pip windows: chocolatey, pip build system support: ament_cmake cmake setuptools middleware implementation support: eprosima fast-rtps rti connext adlink opensplice bouncy bolson (june 2018 - june 2019) targeted platforms: required support recommended support architecture ubuntu bionic (18.04) macos sierra (10.12) windows 10 (vs2017) ubuntu xenial (16.04) [s] debian stretch (9) [s] amd64 x x x x [s] x [s] arm64 x x [s] x [s] " [s] " compilation from source, the ros buildfarm will not produce any binary packages for these platforms. minimum language requirements: c11 [2] c++14 python 3.5 dependency requirements: required support recommended support package ubuntu bionic macos** windows 10** ubuntu xenial [s] debian stretch [s] cmake 3.10.2 3.11.0 3.10.2 3.5.1 3.7.2 empy 3.3.2 3.6.5 3.3.2 3.3.2 3.3.2 ogre 1.10* 1.10* 1.10* 1.10* 1.10* opencv 3.2.0 3.4.1 3.4.1* 2.4.9 3.2* poco 1.8.0 1.9.0 1.8.0* 1.8.0* 1.8.0* python 3.6.5 3.6.5 3.6.5 3.5.1 3.5.3 qt 5.9.5 5.10.0 5.10.0 5.5.1 5.7.1 linux only (used for turtlebot demo) pcl 1.8.1 n/a n/a 1.7.2 1.8.0 " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " rolling distributions will see multiple version changes of these dependencies during their lifetime. " [s] " compilation from source, the ros buildfarm will not produce any binary packages for these platforms. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu bionic: apt macos: homebrew, pip windows: chocolatey, pip ubuntu xenial, debian stretch: apt build system support: ament_cmake cmake setuptools middleware implementation support: eprosima fast-rtps rti connext adlink opensplice crystal clemmys (december 2018 - december 2019) targeted platforms: architecture ubuntu bionic (18.04) macos sierra (10.12) windows 10 (vs2017) ubuntu xenial (16.04) debian stretch (9) amd64 tier 1 [d][a][s] tier 1 [a][s] tier 1 [a][s] tier 2 [s] tier 3 [s] arm64 tier 1 [d][a][s] tier 2 [s] tier 3 [s] the following indicators show what delivery mechanisms are available for each platform. " [d] " debian packages will be provided for this platform for packages submitted to the rosdistro. " [a] " binary releases are provided as a single archive per platform containing all packages in the crystal ros 2 repos file [4] . " [s] " compilation from source. middleware implementation support: middleware library middleware provider support level platforms architectures rmw_fastrtps_cpp eprosima fast-rtps tier 1 all platforms all architectures rmw_connext_cpp rti connext tier 1 all platforms except debian all architectures except arm64 rmw_opensplice_cpp adlink opensplice tier 2 all platforms except debian all architectures rmw_fastrtps_dynamic_cpp eprosima fast-rtps tier 2 all platforms all architectures rmw_connext_dynamic_cpp rti connext tier 2 all platforms except debian all architectures except arm64 middleware implementation support is dependent upon the platform support tier. for example a tier 1 middleware implementation on a tier 2 platform can only receive tier 2 support. minimum language requirements: c11 [2] c++14 python 3.5 dependency requirements: required support recommended support package ubuntu bionic macos** windows 10** ubuntu xenial [s] debian stretch [s] cmake 3.10.2 3.13.3 3.13.3 3.5.1 3.7.2 empy 3.3.2 3.3.2 3.3.2 3.3.2 3.3.2 gazebo 9.0.0 9.9.0 n/a 9.9.0* 9.8.0* ogre 1.10* opencv 3.2.0 4.0.1 3.4.1* 2.4.9 3.2* openssl 1.1.0g 1.0.2q 1.0.2q 1.0.2g 1.1.0j poco 1.8.0 1.9.0 1.8.0* 1.8.0* 1.8.0* python 3.6.5 3.7.2 3.7.2 3.5.1 3.5.3 qt 5.9.5 5.12.0 5.10.0 5.5.1 5.7.1 linux only pcl 1.8.1 n/a n/a 1.7.2 1.8.0 rmw dds middleware providers connext dds 5.3.1 n/a fast-rtps 1.7.0 opensplice 6.9.181127oss " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " rolling distributions will see multiple version changes of these dependencies during their lifetime. " [s] " compilation from source, the ros buildfarm will not produce any binary packages for these platforms. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu, debian: apt macos: homebrew, pip windows: chocolatey, pip build system support: ament_cmake cmake setuptools dashing diademata (may 2019 - may 2021) targeted platforms: architecture ubuntu bionic (18.04) macos sierra (10.12) windows 10 (vs2019) debian stretch (9) openembedded / webos ose amd64 tier 1 [d][a][s] tier 1 [a][s] tier 1 [a][s] tier 3 [s] arm64 tier 1 [d][a][s] tier 3 [s] tier 3 [s] arm32 tier 2 [a][s] tier 3 [s] tier 3 [s] the following indicators show what delivery mechanisms are available for each platform. " [d] " debian packages will be provided for this platform for packages submitted to the rosdistro. " [a] " binary releases are provided as a single archive per platform containing all packages in the dashing ros 2 repos file [5] . " [s] " compilation from source. middleware implementation support: middleware library middleware provider support level platforms architectures rmw_fastrtps_cpp eprosima fast-rtps tier 1 all platforms all architectures rmw_connext_cpp rti connext tier 1 all platforms except debian and openembedded all architectures except arm64/arm32 rmw_cyclonedds_cpp eclipse cyclone dds tier 2 all platforms all architectures rmw_opensplice_cpp adlink opensplice tier 2 all platforms except debian and openembedded all architectures rmw_fastrtps_dynamic_cpp eprosima fast-rtps tier 2 all platforms all architectures middleware implementation support is dependent upon the platform support tier. for example a tier 1 middleware implementation on a tier 2 platform can only receive tier 2 support. minimum language requirements: c++14 python 3.5 dependency requirements: required support recommended support package ubuntu bionic macos** windows 10** debian stretch openembedded** cmake 3.10.2 3.14.4 3.14.4 3.7.2 3.16.1 / 3.12.2*** empy 3.3.2 gazebo 9.0.0 9.9.0 n/a 9.8.0* n/a ogre 1.10* n/a opencv 3.2.0 4.1.0 3.4.6* 3.2* 4.1.0 / 3.2.0*** openssl 1.1.0g 1.0.2r 1.0.2r 1.1.0j 1.1.1d / 1.1.1b*** poco 1.8.0 1.9.0 1.8.0* 1.8.0* 1.9.4 python 3.6.5 3.7.3 3.7.3 3.5.3 3.8.2 / 3.7.5*** qt 5.9.5 5.12.3 5.10.0 5.7.1 5.14.1 / 5.12.5*** linux only pcl 1.8.1 n/a n/a 1.8.0 1.8.1 rmw dds middleware providers connext dds 5.3.1 n/a cyclone dds 0.7.x (coquette) fast-rtps 1.8.0 opensplice 6.9.190403oss n/a " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " rolling distributions will see multiple version changes of these dependencies during their lifetime. the versions shown for openembedded are those provided by the 3.1 dunfell release series; the versions provided by the other supported release series are listed here: https://github.com/ros/meta-ros/wiki/package-version-differences . note that the openembedded releases series for which a ros distro has support will change during its support time frame, as per the openembedded support policy shown here: https://github.com/ros/meta-ros/wiki/policies#openembedded-release-series-support . however, it will always be supported by least one stable openembedded release series. " *** " webos ose provides this different version. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu, debian: apt macos: homebrew, pip windows: chocolatey, pip openembedded: opkg build system support: ament_cmake cmake setuptools eloquent elusor (november 2019 - november 2020) targeted platforms: architecture ubuntu bionic (18.04) macos mojave (10.14) windows 10 (vs2019) debian buster (10) openembedded / webos ose amd64 tier 1 [d][a][s] tier 1 [a][s] tier 1 [a][s] tier 3 [s] arm64 tier 1 [d][a][s] tier 3 [s] tier 3 [s] arm32 tier 2 [a][s] tier 3 [s] tier 3 [s] the following indicators show what delivery mechanisms are available for each platform. " [d] " debian packages will be provided for this platform for packages submitted to the rosdistro. " [a] " binary releases are provided as a single archive per platform containing all packages in the eloquent ros 2 repos file [6] . " [s] " compilation from source. middleware implementation support: middleware library middleware provider support level platforms architectures rmw_fastrtps_cpp eprosima fast-rtps tier 1 all platforms all architectures rmw_connext_cpp rti connext tier 1 all platforms except debian and openembedded all architectures except arm64/arm32 rmw_cyclonedds_cpp eclipse cyclone dds tier 2 all platforms all architectures rmw_opensplice_cpp adlink opensplice tier 2 all platforms except debian and openembedded all architectures rmw_fastrtps_dynamic_cpp eprosima fast-rtps tier 2 all platforms all architectures middleware implementation support is dependent upon the platform support tier. for example a tier 1 middleware implementation on a tier 2 platform can only receive tier 2 support. minimum language requirements: c++14 python 3.6 dependency requirements: required support recommended support package ubuntu bionic macos** windows 10** debian buster openembedded** cmake 3.10.2 3.14.4 3.14.4 3.13.4 3.16.1 / 3.12.2**** empy 3.3.2 gazebo 9.0.0 9.9.0 n/a 9.8.0* n/a ogre 1.10* n/a opencv 3.2.0 4.1.0 3.4.6* 3.2.0 4.1.0 / 3.2.0**** openssl 1.1.0g 1.0.2r 1.0.2r 1.1.1c 1.1.1d / 1.1.1b**** poco 1.8.0 1.9.0 1.8.0* 1.9.0 1.9.4 python 3.6.5 3.7.3 3.7.3 3.7.3 3.8.2 / 3.7.5**** qt 5.9.5 5.12.3 5.10.0 5.11.3 5.14.1 / 5.12.5**** linux only pcl 1.8.1 n/a n/a 1.9.1 1.8.1 rmw dds middleware providers connext dds 5.3.1*** n/a cyclone dds 0.7.x (coquette) fast-rtps 1.9.0 opensplice 6.9.190705oss n/a " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " rolling distributions will see multiple version changes of these dependencies during their lifetime. the versions shown for openembedded are those provided by the 3.1 dunfell release series; the versions provided by the other supported release series are listed here: https://github.com/ros/meta-ros/wiki/package-version-differences . note that the openembedded releases series for which a ros distro has support will change during its support time frame, as per the openembedded support policy shown here: https://github.com/ros/meta-ros/wiki/policies#openembedded-release-series-support . however, it will always be supported by least one stable openembedded release series. " *** " it is anticipated that this will be increased to connext dds 6.0.0 pending migration patches [7] . " **** " webos ose provides this different version. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu, debian: apt macos: homebrew, pip windows: chocolatey, pip openembedded: opkg build system support: ament_cmake cmake setuptools foxy fitzroy (may 2020 - may 2023) targeted platforms: architecture ubuntu focal (20.04) macos mojave (10.14) windows 10 (vs2019) debian buster (10) openembedded / webos ose amd64 tier 1 [d][a][s] tier 1 [a][s] tier 1 [a][s] tier 3 [s] arm64 tier 1 [d][a][s] tier 3 [s] tier 3 [s] arm32 tier 3 [s] tier 3 [s] tier 3 [s] the following indicators show what delivery mechanisms are available for each platform. " [d] " debian packages will be provided for this platform for packages submitted to the rosdistro. " [a] " binary releases are provided as a single archive per platform containing all packages in the foxy ros 2 repos file [9] . " [s] " compilation from source. middleware implementation support: middleware library middleware provider support level platforms architectures rmw_fastrtps_cpp eprosima fast-rtps tier 1 all platforms all architectures rmw_cyclonedds_cpp eclipse cyclone dds tier 1 all platforms all architectures rmw_connext_cpp rti connext tier 1 all platforms except debian and openembedded all architectures except arm64/arm32 rmw_fastrtps_dynamic_cpp eprosima fast-rtps tier 2 all platforms all architectures rmw_gurumdds_cpp gurumnetworks gurumdds tier 3 ubuntu and windows all architectures except arm32 middleware implementation support is dependent upon the platform support tier. for example a tier 1 middleware implementation on a tier 2 platform can only receive tier 2 support. minimum language requirements: c++14 python 3.7 dependency requirements: required support recommended support package ubuntu focal macos** windows 10** debian buster openembedded** cmake 3.16.3 3.14.4 3.14.4 3.13.4 3.16.1 / 3.12.2**** empy 3.3.2 gazebo 11.0.0* 11.0.0 n/a 11.0.0* n/a ignition citadel* n/a citadel* n/a ogre 1.10* n/a opencv 4.2.0 4.2.0 3.4.6* 3.2.0 4.1.0 / 3.2.0**** openssl 1.1.1d 1.1.1f 1.1.1f 1.1.1d 1.1.1d / 1.1.1b**** poco 1.9.2 1.9.0 1.8.0* 1.9.0 1.9.4 python 3.8.0 3.8.2 3.8.0 3.7.3 3.8.2 / 3.7.5**** qt 5.12.5 5.12.3 5.10.0 5.11.3 5.14.1 / 5.12.5**** linux only pcl 1.10.0 n/a n/a 1.9.1 1.10.0 rmw dds middleware providers connext dds 5.3.1 n/a cyclone dds 0.7.x (coquette) fast-rtps 2.0.x gurum dds 2.7.x n/a 2.7.x n/a " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " rolling distributions will see multiple version changes of these dependencies during their lifetime. the versions shown for openembedded are those provided by the 3.1 dunfell release series; the versions provided by the other supported release series are listed here: https://github.com/ros/meta-ros/wiki/package-version-differences . note that the openembedded releases series for which a ros distro has support will change during its support time frame, as per the openembedded support policy shown here: https://github.com/ros/meta-ros/wiki/policies#openembedded-release-series-support . however, it will always be supported by least one stable openembedded release series. " **** " webos ose provides this different version. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu, debian: apt macos: homebrew, pip windows: chocolatey, pip openembedded: opkg build system support: ament_cmake cmake setuptools galactic geochelone (may 2021 - november 2022) targeted platforms: architecture ubuntu focal (20.04) windows 10 (vs2019) rhel 8 macos debian bullseye (11) openembedded / webos ose amd64 tier 1 [d][a][s] tier 1 [a][s] tier 2 [d][a][s] tier 3 [s] tier 3 [s] arm64 tier 1 [d][a][s] tier 3 [s] tier 3 [s] arm32 tier 3 [s] tier 3 [s] tier 3 [s] the following indicators show what delivery mechanisms are available for each platform. " [d] " distribution-specific (debian, rpm, etc.) packages will be provided for this platform for packages submitted to the rosdistro. " [a] " binary releases are provided as a single archive per platform containing all packages in the galactic ros 2 repos file [10] . " [s] " compilation from source. middleware implementation support: middleware library middleware provider support level platforms architectures rmw_cyclonedds_cpp eclipse cyclone dds tier 1 all platforms all architectures rmw_fastrtps_cpp eprosima fast-dds tier 1 all platforms all architectures rmw_connextdds rti connext tier 1 ubuntu, windows, and macos all architectures except arm64 rmw_fastrtps_dynamic_cpp eprosima fast-dds tier 2 all platforms all architectures rmw_gurumdds_cpp gurumnetworks gurumdds tier 3 ubuntu and windows all architectures except arm32 middleware implementation support is dependent upon the platform support tier. for example a tier 1 middleware implementation on a tier 2 platform can only receive tier 2 support. minimum language requirements: c++17 python 3.6 dependency requirements: required support recommended support package ubuntu focal windows 10** rhel 8 macos** debian bullseye openembedded** cmake 3.16.3 3.19.1 3.18.2 3.14.4 3.18.4 3.16.1 / 3.12.2**** empy 3.3.2 gazebo 11.0.0* n/a n/a 11.0.0 11.0.0* n/a ignition edifice* n/a n/a edifice* edifice* n/a ogre 1.10* n/a opencv 4.2.0 3.4.6* 3.4.6 4.2.0 4.5.1 4.1.0 / 3.2.0**** openssl 1.1.1d 1.1.1i 1.1.1g 1.1.1f 1.1.1i 1.1.1d / 1.1.1b**** python 3.8.0 3.8.3 3.6.8 3.8.2 3.9.1 3.8.2 / 3.7.5**** qt 5.12.5 5.12.10 5.12.5 5.12.3 5.15.2 5.14.1 / 5.12.5**** linux only pcl 1.10.0 n/a 1.11.1 n/a 1.11.1 1.10.0 rmw dds middleware providers cyclone dds 0.8.x (rãplique) fast-dds 2.3.x connext dds 5.3.1 n/a 5.3.1 n/a gurum dds 2.7.x n/a " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " rolling distributions will see multiple version changes of these dependencies during their lifetime. the versions shown for openembedded are those provided by the 3.1 dunfell release series; the versions provided by the other supported release series are listed here: https://github.com/ros/meta-ros/wiki/package-version-differences . note that the openembedded releases series for which a ros distro has support will change during its support time frame, as per the openembedded support policy shown here: https://github.com/ros/meta-ros/wiki/policies#openembedded-release-series-support . however, it will always be supported by least one stable openembedded release series. " **** " webos ose provides this different version. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu, debian: apt windows: chocolatey, pip macos: homebrew, pip rhel: dnf openembedded: opkg build system support: ament_cmake cmake setuptools humble hawksbill (may 2022 - may 2027) targeted platforms: architecture ubuntu jammy (22.04) windows 10 (vs2019) rhel 8 ubuntu focal (20.04) macos debian bullseye (11) openembedded / yocto project amd64 tier 1 [d][a][s] tier 1 [a][s] tier 2 [d][a][s] tier 3 [s] tier 3 [s] tier 3 [s] tier 3 [s] arm64 tier 1 [d][a][s] tier 3 [s] tier 3 [s] tier 3 [s] arm32 tier 3 [s] tier 3 [s] tier 3 [s] tier 3 [s] the following indicators show what delivery mechanisms are available for each platform. " [d] " distribution-specific (debian, rpm, etc.) packages will be provided for this platform for packages submitted to the rosdistro. " [a] " binary releases are provided as a single archive per platform containing all packages in the humble ros 2 repos file [11] . " [s] " compilation from source. middleware implementation support: middleware library middleware provider support level platforms architectures rmw_fastrtps_cpp eprosima fast-dds tier 1 all platforms all architectures rmw_cyclonedds_cpp eclipse cyclone dds tier 1 all platforms all architectures rmw_connextdds rti connext tier 1 ubuntu, windows, and macos all architectures except arm64 rmw_fastrtps_dynamic_cpp eprosima fast-dds tier 2 all platforms all architectures rmw_gurumdds_cpp gurumnetworks gurumdds tier 3 ubuntu and windows all architectures except arm32 middleware implementation support is dependent upon the platform support tier. for example a tier 1 middleware implementation on a tier 2 platform can only receive tier 2 support. minimum language requirements: c++17 python 3.6 dependency requirements: required support recommended support package ubuntu jammy windows 10** rhel 8 ubuntu focal macos** debian bullseye openembedded** cmake 3.22.1 3.22.0 3.20.2 3.16.3 3.14.4 3.18.4 3.22.3 / 3.16.5*** empy 3.3.4 3.3.2 gazebo classic 11.x.x* n/a n/a 11.0.0* 11.x.x 11.x.x* n/a gazebo (ignition) fortress* n/a n/a fortress* fortress* fortress* n/a numpy 1.21.5 1.18.4 1.14.3 1.17.4 1.18.4 1.19.5 n/a ogre 1.12.1* n/a opencv 4.5.4 3.4.6* 3.4.6 4.2.0 4.2.0 4.5.1 4.1.0 / 3.2.0*** openssl 1.1.1l 1.1.1l 1.1.1k 1.1.1d 1.1.1f 1.1.1i 1.1.1d / 1.1.1b*** python 3.10.4 3.8.3 3.6.8 3.8.0 3.8.2 3.9.1 3.8.2 / 3.7.5*** qt 5.15.3 5.12.12 5.15.2 5.12.5 5.12.3 5.15.2 5.14.1 / 5.12.5*** linux only pcl 1.12.1 n/a 1.11.1 1.10.0 n/a 1.11.1 1.10.0 rmw dds middleware providers cyclone dds 0.9.x (papillons) fast-dds 2.6.x connext dds 6.0.1 n/a 6.0.1 n/a gurum dds 2.7.x n/a 2.7.x n/a " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " means that the dependency may see multiple version changes, because the dependency uses a package manager that continually updates the dependency without a stable api. " *** " webos ose provides this different version. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu, debian: apt windows: chocolatey, pip macos: homebrew, pip rhel: dnf openembedded: opkg build system support: ament_cmake cmake setuptools iron irwini (may 2023 - november 2024) targeted platforms: architecture ubuntu jammy (22.04) windows 10 (vs2019) rhel 9 macos debian bullseye (11) openembedded / yocto project amd64 tier 1 [d][a][s] tier 1 [a][s] tier 2 [d][a][s] tier 3 [s] tier 3 [s] tier 3 [s] arm64 tier 1 [d][a][s] tier 3 [s] tier 3 [s] arm32 tier 3 [s] tier 3 [s] tier 3 [s] the following indicators show what delivery mechanisms are available for each platform. " [d] " distribution-specific (debian, rpm, etc.) packages will be provided for this platform for packages submitted to the rosdistro. " [a] " binary releases are provided as a single archive per platform containing all packages in the iron ros 2 repos file [12] . " [s] " compilation from source. middleware implementation support: middleware library middleware provider support level platforms architectures rmw_fastrtps_cpp eprosima fast-dds tier 1 all platforms all architectures rmw_cyclonedds_cpp eclipse cyclone dds tier 1 all platforms all architectures rmw_connextdds rti connext tier 1 ubuntu, windows, and macos all architectures except arm64 rmw_fastrtps_dynamic_cpp eprosima fast-dds tier 2 all platforms all architectures rmw_gurumdds_cpp gurumnetworks gurumdds tier 3 ubuntu and windows all architectures except arm32 middleware implementation support is dependent upon the platform support tier. for example a tier 1 middleware implementation on a tier 2 platform can only receive tier 2 support. minimum language requirements: c++17 python 3.8 dependency requirements: required support recommended support package ubuntu jammy windows 10** rhel 9 macos** debian bullseye openembedded** cmake 3.22.1 3.22.0 3.20.2 3.14.4 3.18.4 3.22.3 / 3.16.5*** empy 3.3.4 3.3.2 3.3.4 3.3.2 gazebo classic 11.x.x* n/a n/a 11.x.x 11.x.x* n/a gazebo (ignition) fortress* n/a n/a fortress* fortress* n/a numpy 1.21.5 1.18.4 1.20.1 1.18.4 1.19.5 n/a ogre 1.12.1* n/a opencv 4.5.4 3.4.6* 4.6.0 4.2.0 4.5.1 4.1.0 / 3.2.0*** openssl 3.0.2 1.1.1l 3.0.1 1.1.1f 1.1.1i 1.1.1d / 1.1.1b*** python 3.10.6 3.8.3 3.9.14 3.10.8 3.9.1 3.8.2 / 3.7.5*** qt 5.15.3 5.12.12 5.15.3 5.12.3 5.15.2 5.14.1 / 5.12.5*** linux only pcl 1.12.1 n/a 1.12.0 n/a 1.11.1 1.10.0 rmw dds middleware cyclone dds 0.9 fast-dds 2.8 connext dds 6.0.1 n/a gurum dds 2.8.x n/a " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " means that the dependency may see multiple version changes, because the dependency uses a package manager that continually updates the dependency without a stable api. " *** " webos ose provides this different version. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu, debian: apt windows: chocolatey, pip macos: homebrew, pip rhel: dnf openembedded: opkg build system support: ament_cmake cmake setuptools jazzy jalisco (may 2024 - may 2029) targeted platforms: architecture ubuntu noble (24.04) windows 10 (vs2019) rhel 9 macos debian bookworm (12) openembedded / yocto project amd64 tier 1 [d][a][s] tier 1 [a][s] tier 2 [d][a][s] tier 3 [s] tier 3 [s] tier 3 [s] arm64 tier 1 [d][a][s] tier 3 [s] tier 3 [s] arm32 tier 3 [s] tier 3 [s] tier 3 [s] the following indicators show what delivery mechanisms are available for each platform. " [d] " distribution-specific (debian, rpm, etc.) packages will be provided for this platform for packages submitted to the rosdistro. " [a] " binary releases are provided as a single archive per platform containing all packages in the jazzy ros 2 repos file [13] . " [s] " compilation from source. middleware implementation support: middleware library middleware provider support level platforms architectures rmw_fastrtps_cpp eprosima fast-dds tier 1 all platforms all architectures rmw_cyclonedds_cpp eclipse cyclone dds tier 1 all platforms all architectures rmw_connextdds rti connext tier 1 ubuntu, windows, and macos all architectures except arm64 rmw_fastrtps_dynamic_cpp eprosima fast-dds tier 2 all platforms all architectures rmw_gurumdds_cpp gurumnetworks gurumdds tier 3 ubuntu and windows all architectures except arm32 middleware implementation support is dependent upon the platform support tier. for example a tier 1 middleware implementation on a tier 2 platform can only receive tier 2 support. minimum language requirements: c++17 python 3.8 dependency requirements: required support recommended support package ubuntu noble windows 10** rhel 9 macos** debian bookworm openembedded** cmake 3.28.3 3.22.0 3.20.2 3.20.0 3.25.1 3.22.3 empy 3.3.4 3.3.2 3.3.4 3.3.4 gazebo harmonic* n/a n/a harmonic* harmonic* n/a numpy 1.26.4 1.18.4 1.20.1 1.18.4 1.24.2 n/a ogre 1.12.10 n/a opencv 4.6.0 3.4.6* 4.6.0 4.2.0 4.6.0 4.1.0 / 3.2.0*** openssl 3.0.13 1.1.1l 3.0.7 1.1.1f 3.0.11 1.1.1d / 1.1.1b*** python 3.12.3 3.8.3 3.9.16 3.10.8 3.11.2 3.8.2 / 3.7.5*** qt 5.15.10 5.12.12 5.15.3 5.12.3 5.15.8 5.14.1 / 5.12.5*** linux only pcl 1.14.0 n/a 1.12.0 n/a 1.13.0 1.10.0 rmw dds middleware cyclone dds 0.10.4 fast-dds 2.14.0 connext dds 6.0.1 n/a gurum dds 4.2.0 n/a " * " means that this is not the upstream version (available on the official operating system repositories) but a package distributed by osrf or the community (package built and distributed on custom repositories). " ** " means that the dependency may see multiple version changes, because the dependency uses a package manager that continually updates the dependency without a stable api. " *** " webos ose provides this different version. this document only captures the version at the first release of a ros distribution and will not be updated as the dependencies move forward. these versions are thus a low watermark. package manager use for dependencies: ubuntu, debian: apt, pip windows: chocolatey, pip macos: homebrew, pip rhel: dnf openembedded: opkg build system support: ament_cmake cmake setuptools rolling ridley (june 2020 - ongoing) rolling ridley is a rolling development distribution of ros 2 as described in rep-2002 [8] . the target platform for rolling ridley will update as new upstream distributions are selected for ros 2 development. as of march 2022, rolling ridley targets the same platforms as ros 2 humble hawksbill. motivation this document is provided to help plan future development for libraries. the primary platforms for ros 2 are canonical's ubuntu releases, and our intent is to track these releases as best as possible while also allowing for current, thirdparty libraries to be used. macos and windows being rolling distributions, ros 2 will target the latest state of these distributions at the time of the release. rationale target platforms for future releases are speculative and are based on consulting ubuntu's release and end-of-life schedule [1] . references and footnotes [1] ubuntu releases with end-of-life dates ( https://wiki.ubuntu.com/releases ) [2] ( 1 , 2 , 3 ) c11 is required, but support for some non-compliant systems is also provided, e.g. msvc. [3] rep 2001 ( http://www.ros.org/reps/rep-2001.html ) [4] crystal ros 2 repos file ( https://github.com/ros2/ros2/blob/crystal/ros2.repos ) [5] dashing ros 2 repos file ( https://github.com/ros2/ros2/blob/dashing/ros2.repos ) [6] eloquent ros 2 repos file ( https://github.com/ros2/ros2/blob/eloquent/ros2.repos ) [7] connext dds 6.0.0 support ( https://github.com/ros2/rmw_connext/issues/375 ) [8] rep 2002 ( http://www.ros.org/reps/rep-2002.html ) [9] foxy ros 2 repos file ( https://github.com/ros2/ros2/blob/foxy/ros2.repos ) [10] galactic ros 2 repos file ( https://github.com/ros2/ros2/blob/galactic/ros2.repos ) [11] humble ros 2 repos file ( https://github.com/ros2/ros2/blob/humble/ros2.repos ) [12] iron ros 2 repos file ( https://github.com/ros2/ros2/blob/iron/ros2.repos ) [13] jazzy ros 2 repos file ( https://github.com/ros2/ros2/blob/rolling/ros2.repos )  this document has been placed in the public domain.