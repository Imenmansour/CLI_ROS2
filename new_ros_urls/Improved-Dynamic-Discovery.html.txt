tutorials advanced improved dynamic discovery edit on github improved dynamic discovery ï goal: this tutorial will show how to use the improved dynamic discovery configuration. tutorial level: advanced time: 15 minutes overview ï by default, ros 2 will attempt to find all nodes on all hosts on the same subnet automatically. however, the following options are available to control the ros 2 discovery range. configuration parameters ï ros_automatic_discovery_range : controls how far ros nodes will try to discover each other. valid options are: subnet is the default, and for dds based middleware it means it will discover any node reachable via multicast. localhost means a node will only try to discover other nodes on the same machine. off means the node wonât discover any other nodes, even on the same machine. system_default means âdonât change any discovery settingsâ. ros_static_peers : is a semicolon ( ; ) separated list of addresses that ros should try to discover nodes on. this allows connecting to nodes on specific machines (as long as their discovery range is not set to off ). the combination of these two environment variables for local and remote nodes will enable and control the ros 2 communication discovery range. the following tables highlight the discovery range behavior for possible combination. a x indicates that nodes a and b will not discover each other and communicate. a o indicates that nodes a and b will discover each other and communicate. node a and b running in the same host ï same host node b setting no static peer with static peer off localhost subnet off localhost subnet node a setting no static peer off x x x x x x localhost x o o x o o subnet x o o x o o with static peer off x x x x x x localhost x o o x o o subnet x o o x o o node a and b running in the different hosts ï different hosts node b setting no static peer with static peer off localhost subnet off localhost subnet node a setting no static peer off x x x x x x localhost x x x x o o subnet x x o x o o with static peer off x x x x x x localhost x o o x o o subnet x o o x o o examples ï for example, the following commands will limit the ros 2 communication only with localhost and specific peers: linux macos windows export ros_automatic_discovery_range=localhost export ros_static_peers=192.168.0.1;remote.com to maintain this setting between shell sessions, you can add the command to your shell startup script: echo "export ros_automatic_discovery_range=localhost" >> ~/.bashrc echo "export ros_static_peers=192.168.0.1;remote.com" >> ~/.bashrc export ros_automatic_discovery_range=localhost export ros_static_peers=192.168.0.1;remote.com to maintain this setting between shell sessions, you can add the command to your shell startup script: echo "export ros_automatic_discovery_range=localhost" >> ~/.bash_profile echo "export ros_static_peers=192.168.0.1;remote.com" >> ~/.bash_profile set ros_automatic_discovery_range=localhost set ros_static_peers=192.168.0.1;remote.com if you want to make this permanent between shell sessions, also run: setx ros_automatic_discovery_range localhost setx ros_static_peers 192.168.0.1;remote.com other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling