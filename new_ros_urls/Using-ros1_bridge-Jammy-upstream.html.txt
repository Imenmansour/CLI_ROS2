how-to guides using ros1_bridge with upstream ros on ubuntu 22.04 edit on github using ros1_bridge with upstream ros on ubuntu 22.04 ï the release of ros 2 humble (and rolling) on ubuntu 22.04 jammy jellyfish marks the first ros 2 release on a platform with no official ros 1 release. while ros 1 noetic will continue to be supported through the duration of its long term support window , it will only target ubuntu 20.04. alternatively, there are upstream variants of ros 1 packages in debian and ubuntu that are not maintained as an official distribution by the ros maintainers. this guide outlines the current mechanism for bridging ros 2 releases with these upstream packages on ubuntu 22.04 jammy jellyfish. this provides a migration path for users who still depend on ros 1, but desire moving to newer ros 2 and ubuntu releases. ros 2 via deb packages ï installing ros 2 from deb packages currently does not work for ros 2 on ubuntu jammy. the version of catkin-pkg-modules available in the ubuntu repository conflicts with that in the ros 2 package repository. if the ros 2 apt repository is in the available apt repositories ( /etc/apt/sources.list.d ), no ros 1 packages will be installable. the error will be:  apt install ros-core-dev reading package lists... done building dependency tree... done reading state information... done some packages could not be installed. this may mean that you have requested an impossible situation or if you are using the unstable distribution that some required packages have not yet been created or been moved out of incoming. the following information may help to resolve the situation: the following packages have unmet dependencies: ros-core-dev : depends: catkin but it is not installable e: unable to correct problems, you have held broken packages. to correct this, remove packages.ros.org from your sources.list . if you were following the ros 2 installation guide, simply remove /etc/apt/sources.list.d/ros2.list for now, to support ros1_bridge , follow the instructions below for building ros 2 from source. ros 2 from source ï installing ros 2 from source is the only configuration that works for ros 2 on ubuntu jammy. below is a summary of the necessary instructions from the source build instructions. the substantial deviation is that we skip using the ros 2 apt repositories because of conflicting packages. install development tools and ros tools ï since we arenât using the ros 2 apt repositories, colcon must be installed via pip . sudo apt update && sudo apt install -y \ build-essential \ cmake \ git \ python3-flake8 \ python3-flake8-blind-except \ python3-flake8-builtins \ python3-flake8-class-newline \ python3-flake8-comprehensions \ python3-flake8-deprecated \ python3-flake8-docstrings \ python3-flake8-import-order \ python3-flake8-quotes \ python3-pip \ python3-pytest \ python3-pytest-cov \ python3-pytest-repeat \ python3-pytest-rerunfailures \ python3-rosdep \ python3-setuptools \ wget # install colcon from pypi, rather than apt packages python3 -m pip install -u colcon-common-extensions vcstool from here, continue with the source install guide to build ros 2. install ros 1 from ubuntu packages ï sudo apt update && sudo apt install -y ros-core-dev build ros1_bridge ï # create a workspace for the ros1_bridge mkdir -p ~/ros1_bridge/src cd ~/ros1_bridge/src git clone https://github.com/ros2/ros1_bridge cd ~/ros1_bridge # source the ros 2 workspace . ~/ros2_humble/install/local_setup.bash # build colcon build after building all of ros1_bridge , the remainder of the ros1_bridge examples should work with your new installation other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling