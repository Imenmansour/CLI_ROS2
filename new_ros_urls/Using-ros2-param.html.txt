how-to guides using the ros2 param command-line tool edit on github using the ros2 param command-line tool ï parameters in ros 2 can be get, set, listed, and described through a set of services as described in the concept document . the ros2 param command-line tool is a wrapper around these service calls that makes it easy to manipulate parameters from the command-line. ros2 param list ï this command will list all of the available parameters on a given node, or on all discoverable nodes if no node is given. to get all of the parameters on a given node: ros2 param list /my_node to get all of the parameters on all nodes in the system (this can take a long time on a complicated network): ros2 param list ros2 param get ï this command will get the value of a particular parameter on a particular node. to get the value of a parameter on a node: ros2 param get /my_node use_sim_time ros2 param set ï this command will set the value of a particular parameter on a particular node. for most parameters, the type of the new value must be the same as the existing type. to set the value of a parameter on a node: ros2 param set /my_node use_sim_time false the value that is passed on the command-line is in yaml, which allows arbitrary yaml expressions to be used. however, it also means that certain expressions will be interpreted differently than might be expected. for instance, if the parameter my_string on node my_node is of type string, the following will not work: ros2 param set /my_node my_string off thatâs because yaml is interpreting âoffâ as a boolean, and my_string is a string type. this can be worked around by using the yaml syntax for explicitly setting strings, e.g.: ros param set /my_node my_string '!!str off' additionally, yaml supports heterogeneous lists, containing (say) a string, a boolean, and an integer. however, ros 2 parameters do not support heterogenous lists, so any yaml list that has multiple types will be interpreted as a string. assuming that the parameter my_int_array on node my_node is of type integer array, the following will not work: ros param set /my_node my_int_array '[foo,off,1]' the following string typed parameter would work: ros param set /my_node my_string '[foo,off,1]' ros2 param delete ï this command will remove a parameter from a particular node. however, note that this can only remove dynamic parameters (not declared parameters). see the concept document for more information. ros2 param delete /my_node my_string ros2 param describe ï this command will provide a textual description of a particular parameter on a particular node: ros2 param describe /my_node use_sim_time ros2 param dump ï this command will print out all of the parameters on a particular node in a yaml file format. the output of this command can then be used to re-run the node with the same parameters later: ros2 param dump /my_node ros2 param load ï this command will load the values of the parameters from a yaml file into a particular node. that is, this command can reload values at runtime that were dumped out by ros2 param dump : ros2 param load /my_node my_node.yaml other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling