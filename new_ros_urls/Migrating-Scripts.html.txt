how-to guides migrating from ros 1 to ros 2 migrating scripts edit on github migrating scripts 誰 ros cli 誰 in ros 1 there were individual commands for performing various actions, like rosrun , rosparam , etc. in ros 2, there is a single top-level commands called ros2 , and all of the actions are sub-commands of that, like ros2 run , ros2 param , etc. ros cli arguments 誰 in ros 1, arguments to nodes were provided directly on the command-line. ros 2 arguments should be scoped with --ros-args and a trailing -- (the trailing double dash may be elided if no arguments follow it). remapping names is similar to ros 1, taking on the form from:=to , except that it must be preceded by a --remap (or -r ) flag. for example: ros2 run some_package some_ros_executable --ros-args -r foo: = bar we use a similar syntax for parameters, using the --param (or -p ) flag: ros2 run some_package some_ros_executable --ros-args -p my_param: = value note, this is different than using a leading underscore in ros 1. to change a node name use __node (the ros 1 equivalent is __name ): ros2 run some_package some_ros_executable --ros-args -r __node: = new_node_name note the use of the -r flag. the same remap flag is needed for changing the namespace __ns : ros2 run some_package some_ros_executable --ros-args -r __ns: = /new/namespace there is no equivalent in ros 2 for the following ros 1 keys: __log (but --log-config-file can be used to provide a logger configuration file) __ip __hostname __master for more information, see the design document . quick reference 誰 feature ros 1 ros 2 remapping foo:=bar -r foo:=bar parameters _foo:=bar -p foo:=bar node name __name:=foo -r __node:=foo namespace __ns:=foo -r __ns:=foo other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling