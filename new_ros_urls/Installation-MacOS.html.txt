tutorials advanced simulators webots installation (macos) edit on github installation (macos) ï goal: install the webots_ros2 package and run simulation examples on macos. tutorial level: advanced time: 10 minutes background ï the webots_ros2 package provides an interface between ros 2 and webots. it includes several sub-packages, including webots_ros2_driver , which allows you to start webots and communicate with it. other sub-packages are mainly examples that show multiple possible implementations using the interface. in this tutorial, you are going to install the package and learn how to run one of these examples. prerequisites ï it is recommended to understand basic ros principles covered in the beginner tutorials . in particular, creating a workspace and creating a package are useful prerequisites. it is necessary to install webots natively on the mac in order to use the webots_ros2 package in the virtual machine as explained below. you can follow the installation procedure or build it from sources . tasks ï on macos, a solution based on utm virtual machines provides an improved user experience with ros 2 compared to native macos installation, as it runs ros in a linux environment. however, webots should be installed natively on macos and it will be able to communicate with the ros nodes running in the virtual machine (vm). this solution allows for native 3d hardware acceleration for webots. the vm runs all the ros part (including rviz) and connects to the host machine through tcp to start webots. a shared folder allows the script to transfer the world and other resource files from the vm to macos where webots is running. the following steps explain how to create the vm image with the installation of the webots_ros2 released package. it is also possible to install it from sources. 1 create the vm image ï install utm on your macos machine. the link can be found on the official utm website . download the .iso image of ubuntu 22.04 for humble and rolling or ubuntu 20.04 for foxy. be sure to download the image corresponding to your cpu architecture. in the utm software: create a new image and choose virtualize option. select the iso image you have downloaded in the boot iso image field. leave all hardware settings at default (including hardware acceleration disabled). in the shared directory window, select a folder that will be used by webots_ros2 to transfer all the webots assets to the host. in this example, the selected folder is /users/username/shared . leave all the remaining parameters as default. start the vm. note that you can select another shared folder each time you start the vm. during the first launch of the vm, install ubuntu and choose a username for your account. in this example, the username is ubuntu . once ubuntu is installed, close the vm, remove the iso image from the cd/dvd field and restart the vm. 2 configure the vm ï in this section, ros 2 is installed in the vm and the shared folder is configured. the following instructions and commands are all run inside the vm. open a terminal in the started vm and install the ros 2 distribution you need by following the instructions in ubuntu (deb packages) : create a folder in the vm to use as a shared folder. in this example, the shared folder in the vm is /home/ubuntu/shared . mkdir /home/ubuntu/shared to mount this folder to the host, execute the following command. donât forget to modify the path to the shared folder, if it is different in your case. sudo mount -t 9p -o trans=virtio share /home/ubuntu/shared -oversion=9p2000.l to automatically mount this folder to the host when starting the vm, add the following line to /etc/fstab . donât forget to modify the path to the shared folder, if it is different in your case. share /home/ubuntu/shared 9p trans=virtio,version=9p2000.l,rw,_netdev,nofail 0 0 the environment variable webots_shared_folder must always be set in order for the package to work properly in the vm. this variable specifies the location of the shared folder that is used to exchange data between the host machine and the virtual machine (vm) to the webots_ros2 package. the value to use for this variable should be in the format of <host shared folder>:<vm shared folder> , where <host shared folder> is the path to the shared folder on the host machine and <vm shared folder> is the path to the same shared folder on the vm. in this example: export webots_shared_folder=/users/username/shared:/home/ubuntu/shared you can add this command line to the ~/.bashrc file to automatically set this environment variable when starting a new terminal. 3 install webots_ros2 ï you can either install webots_ros2 from the official released package, or install it from the latest up-to-date sources from github . install webots_ros2 distributed package install webots_ros2 from sources run the following command in the vm terminal. sudo apt-get install ros-jazzy-webots-ros2 install git. sudo apt-get install git create a ros 2 workspace with its src directory. mkdir -p ~/ros2_ws/src source the ros 2 environment. source /opt/ros/jazzy/setup.bash retrieve the sources from github. cd ~/ros2_ws git clone --recurse-submodules https://github.com/cyberbotics/webots_ros2.git src/webots_ros2 install the package dependencies. sudo apt install python3-pip python3-rosdep python3-colcon-common-extensions sudo rosdep init && rosdep update rosdep install --from-paths src --ignore-src --rosdistro jazzy build the package using colcon . colcon build source this workspace. source install/local_setup.bash 4 launch the webots_ros2_universal_robot example ï as mentioned in previous sections, the package uses the shared folder to communicate with webots from the vm to the host. in order for webots to be started on the host from the vmâs ros package, a local tcp simulation server must be run. the server can be downloaded here: local_simulation_server.py . specify the webots installation folder in webots_home environment variable (e.g. /applications/webots.app ) and run the server using the following commands in a new terminal on the host (not in the vm): export webots_home=/applications/webots.app python3 local_simulation_server.py in the vm, open a terminal and execute the following commands to start a package: first source the ros 2 environment, if not done already. source /opt/ros/jazzy/setup.bash if installed from sources, source your ros 2 workspace, if not done already. cd ~/ros2_ws source install/local_setup.bash if not already set in ~/.bashrc , set webots_shared_folder (see previous sections for details). be sure to change the paths according to the location of your respective directories. export webots_shared_folder=/users/username/shared:/home/ubuntu/shared use the ros 2 launch command to start demo packages (e.g. webots_ros2_universal_robot ). ros2 launch webots_ros2_universal_robot multirobot_launch.py if webots is closed or the ros 2 process is interrupted, the local server will automatically wait for a new package launch and the shared folder will be cleaned for the next run. other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling