tutorials demos experimenting with a dummy robot edit on github experimenting with a dummy robot ï in this demo, we present a simple demo robot with all components from publishing joint states over publishing fake laser data until visualizing the robot model on a map in rviz. launching the demo ï we assume your ros 2 installation dir as ~/ros2_ws .  change the directories according to your platform. to start the demo, we execute the demo bringup launch file, which we are going to explain in more details in the next section. source build deb package mkdir -p ~/ros2_ws/src cd ~/ros2_ws/src git clone -b {ros_distro} https://github.com/ros2/demos cd .. && colcon build âpackages-up-to dummy_robot_bringup source ~/ros2_ws/install/setup.bash ros2 launch dummy_robot_bringup dummy_robot_bringup_launch.py sudo apt install ros-{ros_distro}-dummy-robot-bringup ros2 launch dummy_robot_bringup dummy_robot_bringup_launch.py you should see some prints inside your terminal along the lines of the following: [ info ] [ launch ] : default logging verbosity is set to info [ info ] [ dummy_map_server-1 ] : process started with pid [ 2922 ] [ info ] [ robot_state_publisher-2 ] : process started with pid [ 2923 ] [ info ] [ dummy_joint_states-3 ] : process started with pid [ 2924 ] [ info ] [ dummy_laser-4 ] : process started with pid [ 2925 ] [ dummy_laser-4 ] [ info ] [ 1714837459 .645517297 ] [ dummy_laser ] : angle inc: 0 .004363 [ dummy_laser-4 ] [ info ] [ 1714837459 .645613393 ] [ dummy_laser ] : scan size: 1081 [ dummy_laser-4 ] [ info ] [ 1714837459 .645626640 ] [ dummy_laser ] : scan time increment: 0 .000000 [ robot_state_publisher-2 ] [ info ] [ 1714837459 .652977937 ] [ robot_state_publisher ] : robot initialized if you now open rviz2 in a new terminal, youâll see your robot. ð  source ~/ros2_ws/install/setup.bash  rviz2 this opens rviz2. assuming you have your dummy_robot_bringup still launched, you can now add the tf display plugin and configure your global frame to world . once you did that, you should see a similar picture: whatâs happening? ï if you have a closer look at the launch file, we start a couple of nodes at the same time. dummy_map_server dummy_laser dummy_joint_states robot_state_publisher the first two packages are relatively simple. the dummy_map_server constantly publishes an empty map with a periodic update. the dummy_laser does basically the same; publishing dummy fake laser scans. the dummy_joint_states node is publishing fake joint state data. as we are publishing a simple rrbot with only two joints, this node publishes joint states values for these two joints. the robot_state_publisher is doing the actual interesting work. it parses the given urdf file, extracts the robot model and listens to the incoming joint states. with this information, it publishes tf values for our robot which we visualize in rviz. hooray! other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling