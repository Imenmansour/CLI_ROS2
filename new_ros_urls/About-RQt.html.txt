concepts intermediate concepts overview and usage of rqt edit on github overview and usage of rqt ï overview ï rqt is a graphical user interface framework that implements various tools and interfaces in the form of plugins. one can run all the existing gui tools as dockable windows within rqt. the tools can still run in a traditional standalone method, but rqt makes it easier to manage all the various windows in a single screen layout. you can run any rqt tools/plugins easily by: rqt this gui allows you to choose any available plugins on your system. you can also run plugins in standalone windows. for example, rqt python console: ros2 run rqt_py_console rqt_py_console users can create their own plugins for rqt with either python or c++ . to see what rqt plugins are available for your system, run: ros2 pkg list and then look for packages that start with rqt_ . system setup ï installing from debs ï sudo apt install ros-jazzy-rqt* building from source ï see building rqt from source . rqt components structure ï rqt consists of two metapackages: rqt - core infrastucture modules. rqt_common_plugins - commonly useful debugging tools. advantage of rqt framework ï compared to building your own guis from scratch: standardized common procedures for gui (start-shutdown hook, restore previous states). multiple widgets can be docked in a single window. easily turn your existing qt widgets into rqt plugins. expect support at robotics stack exchange (ros community website for the questions). from system architectureâs perspective: support multi-platform (basically wherever qt and ros run) and multi-language ( python , c++ ). manageable lifecycle: rqt plugins using a common api makes maintainance & reuse easier. further reading ï ros 2 discourse announcement of porting to ros 2 ) rqt for ros 1 documentation brief overview of rqt (from a willow garage intern  post ) other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling