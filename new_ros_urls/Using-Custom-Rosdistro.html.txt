how-to guides using custom rosdistro version edit on github using custom rosdistro version ï overview ï rosdistro contains the central index of ros packages for all distributions and rosdep keys for packaged binary dependencies for installation. when you invoke rosdep install ... , it is checking a local cached index from rosdistro (populated during rosdep update ) to correlate keys in a package.xml to the ros package, python module, or binary to install. thus, this index is an important element of the ros ecosystem. however, there are occasions where a user would like the assert further control over this index to add in their own proprietary keys or use a previous state of rosdistro. this guide walks through how to set a version of rosdistro to use on your system. the motivating example that this guide will use is a desire to use a previous version of rolling due to a breakage on your development computer or continuous integration. it is possible that during transition periods from one operating system to another, rolling on the older operating system may become unusable due to support shifting to a new os (i.e. moving from ubuntu 22.04 to 24.04). thus, we wish to set a prior version of rosdistro that aligns with a working rolling distribution on a given operating system to keep our systems functioning before upgrading to the new operating system. important preliminaries ï rosdep populates its cache from the locations set in its /etc/ros/rosdep/sources.list.d/20-default.list by default. when setting up rosdep with rosdep init , it populates 20-default.list with the main rosdistro urls ( from this file ). the cache generated by rosdep update is located in ~/.ros/rosdep/sources.cache and should not be modified by hand. when no rosdistro_index_url environment variable value is set during a rosdep update, it uses the main public rosdistro index. however, when this value is set, you may use a custom rosdisto index which could be a snapshot from the public index or a completely separate index populated with your proprietary packages. if youâd like to learn more  this, checkout the documentation in ros_buildfarm package . how to use a custom rosdistro version ï to use a custom version in your ci, docker build, local environment, robot, or other application, we need to first identify the rosdistro version of interest. for our motivating example, we wish to use the last index state before the first sync of rolling on the new operating system. in this case, that last sync for our operating system was performed on february 28, 2024. conveniently, the syncs are tagged so we can obtain that information on the rolling/2024-02-28 tagged branch. thus, we need to update the 20-default.list with our tagged branch values rather than using the main repositoryâs current state. this can be accomplished using the script as follows. if running on a local host, you may need to include sudo . this will update list to use our tagged branch rather than the master branch. sed -i "s|ros\/rosdistro\/master|ros\/rosdistro\/rolling\/2024-02-28|" /etc/ros/rosdep/sources.list.d/20-default.list after, we must now update the environment variable rosdistro_index_url to point to our new rosdistro index. export rosdistro_index_url = https://raw.githubusercontent.com/ros/rosdistro/rolling/2024-02-28/index-v4.yaml if you plan to use this on a local host for a long time, it may be wise to include this in your ~/.bashrc so that all new terminals do this automatically. the v4 in our index points to a new version of the index format. a previous index also exists without the v4 which is still present for historical reasons and legacy systems, but you should not use it. afterward, you can rosdep update , which will now use the changes to update the index in accordance to the rolling distributionâs state on february 28, 2024 before the breakages began. you can see this in action in nav2âs circleci and ros_gzâs github actions in order to bypass a temporary rolling outage in their ci systems. note if you are using a custom rosdistro version, you can substitute the final urls in the default list and index url with your fork or index location. other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling