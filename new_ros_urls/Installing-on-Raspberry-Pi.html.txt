how-to guides ros 2 on raspberry pi edit on github ros 2 on raspberry pi ï ros 2 is supported on both 32 bit (arm32) and 64 bit (arm64) arm processors. however, you can see here that arm64 receives tier 1 support, while arm32 is tier 3. tier 1 support means distribution specific packages and binary archives are available, while tier 3 requires the user to compile ros 2 from source. the fastest and simplest way to use ros 2 is to use a tier 1 supported configuration. this would mean either installing 64 bit ubuntu on to the raspberry pi, or using the 64 bit version of raspberry pi os and running ros 2 in docker. ubuntu linux on raspberry pi with binary ros 2 install ï ubuntu for raspberry pi is available here . make sure to confirm that you have selected the correct version as described in rep-2000 . you can now install ros 2 using the normal binary installation instructions for ubuntu linux. raspberry pi os with ros 2 in docker ï raspberry pi os 64 bit version is available here . raspberry pi os is based on debian which receives tier 3 support, but it can run ubuntu docker containers for tier 1 support. after flashing the os, install docker . the official ros 2 docker images can be found here . you may choose from ros-core, ros-base, or perception. see here for more information on these variants. fetch and run an image: docker pull ros:jazzy-ros-core docker run -it --rm ros:jazzy-ros-core you can also build images yourself: clone the docker_images git repo onto the raspberry pi, change in to the directory linked above, then to the directory with your preferred variant. inside of the directory, build the container with: docker build -t ros_docker . on a supported system it will only take a minute or two to build the docker containers, as the source code is already built in to binaries. other versions v: jazzy releases jazzy (latest) iron humble galactic (eol) foxy (eol) eloquent (eol) dashing (eol) crystal (eol) in development rolling