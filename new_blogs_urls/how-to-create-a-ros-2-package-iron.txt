skip to content in this tutorial, we will go over how to create a ros 2 package. a ros 2 package is the fundamental building block of robot software in ros 2. imagine it as a lego brick in your robots software architecture. each package contains a specific piece of functionality or capability, like motor control, sensor processing, or communication with other systems. remember, just like legos, you can combine multiple ros 2 packages to create complex robot functionalities. each package plays its specific role, and together they build the complete software system for your robot. the official instructions for creating a package are here , but i will walk you through the entire process, step by step. lets get started! table of contents toggle prerequisites you have created a ros 2 workspace . directions open a terminal, and type these commands (note: we are using the apache 2.0 license , but you can remove that piece if you want): cd ~/ros2_ws/src ros2 pkg create --build-type ament_cmake --license apache-2.0 cobot_arm_examples now lets build our new package: cd ~/ros2_ws colcon build lets see if our new package is recognized by ros 2. either open a new terminal window or source the bashrc file like this: source ~/.bashrc ros2 pkg list you can see the newly created package right there at the top. install useful packages (optional) in a month or so, i will begin building a robotic arm. the package in this tutorial will serve as the foundation for the ros 2 software. lets install some useful packages that will help us along the way. begin by installing a tool called terminator. terminator will enable you to have multiple terminal panes within a single interface. open a terminal window, and type the following commands: sudo apt-get update -y sudo apt-get upgrade -y sudo apt-get install terminator to open terminator, you can either click the 9 dots in the bottom left of your desktop and search for terminator.or you can type terminator in a regular terminal window. you can use ctrl + shift + e or ctrl + shift + o to split the terminal window into different panels. lets install some useful ros 2 packages. open a terminal window, and type the following: sudo apt-get install ros-ros_distro-gazebo-ros sudo apt-get install ros-ros_distro-gazebo-ros2-control sudo apt-get install ros-ros_distro-joint-state-publisher-gui sudo apt-get install ros-ros_distro-moveit sudo apt-get install ros-ros_distro-xacro sudo apt-get install ros-ros_distro-ros2-control sudo apt-get install ros-ros_distro-ros2-controllers sudo apt-get install libserial-dev sudo apt-get install python3-pip pip install pyserial if you want to use amazon alexa voice assistant down the road to control your robotic arm, install the following: pip install ask-sdk pip install flask pip install flask-ask-sdk configure colcon colcon is the primary command-line tool for building, testing, and installing ros packages. in your terminal window, type the following command: echo "source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash" >> ~/.bashrc thats it! keep building!