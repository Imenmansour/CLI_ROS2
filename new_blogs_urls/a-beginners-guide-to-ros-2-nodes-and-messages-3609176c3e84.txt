open in app sign up sign in write sign up sign in a beginners guide to ros 2 nodes and messages skg labs  follow 3 min read  jul 28, 2023 -- listen share when it comes to developing robotic systems, efficient communication is key. ros 2 (robot operating system 2) offers a powerful framework for building such systems, and two of its fundamental concepts are nodes and messages. in this  post, well delve into the world of ros 2 nodes and messages, exploring how they work together to enable seamless communication in a distributed robotic environment. understanding ros 2 nodes: at the heart of ros 2 lies the concept of nodes, which are individual units of computation that perform specific tasks. nodes are modular and independent, allowing developers to break down complex functionalities into manageable parts. each node has a unique name that helps identify it within the system. +----------+ | node | | | +----------+ example: imagine we are developing a mobile robot with various capabilities like motion control, obstacle detection, and image processing. we can create three nodes: motion_control_node , obstacle_detection_node , and image_processing_node . each node will be responsible for its designated functionality. understanding ros 2 messages: communication between ros 2 nodes happens through messages. messages are data structures used to pass information between nodes. they are defined in .msg files and can contain various data types such as integers, floats, strings, arrays, and custom data structures. +----------+ | message | | | +----------+ example: to exchange the robots position information, we can define a pose message containing x , y , and theta (orientation) fields. this message will be used to convey the robot's current position from the motion_control_node to the obstacle_detection_node . how nodes communicate using messages: ros 2 facilitates communication between nodes through publishers and subscribers, enabling a publish-subscribe pattern. publisher node: a node that generates and sends messages on a specific topic. it uses a publisher to distribute the messages to the corresponding topic. +----------+ | | +-------> | publisher| -------+ | | | | | +----------+ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | +-----------+ +----------+ | node 1 | | node 2 | +-----------+ +----------+ example: the motion_control_node acts as a publisher node that regularly sends the robot's position information as pose messages on the topic named robot_position . subscriber node: a node that receives and processes messages from a specific topic. it uses a subscriber to subscribe to a topic and receive messages from it. +----------+ | | | subscriber| --------+ | | | +----------+ | | | | | | | | | | | | | | | +-----------+ +----------+ | node 1 | | node 2 | +-----------+ +----------+ example: the obstacle_detection_node acts as a subscriber node that listens to messages on the topic robot_position . when it receives the pose messages, it can process the data to detect obstacles relative to the robot's position. putting it all together: with nodes, messages, publishers, and subscribers, we can create a seamless communication network within our robotic system. each node performs specific tasks independently, while messages enable the exchange of critical information. +-----------+ +----------+ | node 1 | | node 2 | | publisher | -------+ +----> | subscriber| +-----------+ | | +----------+ | | | | | | | | | | | | | | | | | | | | | | | | | | | | +-----------+ | | +----------+ | node 3 | +---+----> | node 4 | | publisher | | subscriber| +-----------+ +----------+ conclusion: in this  post, we explored the core concepts of ros 2 nodes and messages. nodes provide modularity and efficiency, while messages facilitate seamless communication between nodes. understanding these fundamental components of ros 2 lays a strong foundation for building complex robotic systems. ros 2s flexibility and distributed architecture make it an ideal choice for various robotic applications, from research projects to industrial automation. as you embark on your ros 2 journey, embrace the power of nodes and messages, and unleash the potential of your robotic creations. robotics robots robotics operating system ros2 software development follow written by skg labs 11 followers we develop all things robotics, based in sf bay area. follow help status  careers press    text to speech teams