subscribe on youtube kevsrobots learning platform learn ros with me 60% percent complete overview introduction what is ros setting up the raspberry pi 4 environment raspberry pi setup installing updates setting docker for ros docker install get cubie-1 files clone docker images build the ros2 container build the ros2 container setting up vscode vscode setup first ros2 program first ros2 program talker ros2 program ros2 python packages create a ros2 python package create a ros2 python publisher create a ros2 python subscriber docker and x11 getting rviz2 and rqt to work in docker rviz2 rviz2 rviz2 displays transformations with tf2 laserscan data create a ros2 python package lets create a new python package by kevin mcaleer, 2 minutes create a ros2 package use the ros2 pkg create command to create . ros2 pkg create my_py_pkg --build-type ament_python --dependencies rclpy this will create a new folder that includes the dependencies needed for this package (the rclpy library), as well as the files required to install this such as the setup.py file. the package.xml file is also created. this contains the version, description, maintainer  details as well as the licence type. it also contains the depednecnies for this package; the rcply library we specified. build the new package lets build the new package colcon build 1 package had sdrerr output: if you get and error message that says: summary: 1 package finished [ 3.60s] 1 package had stderr output: my_py_pkg this was because there is a bug in the setuptooldependency package, we can fix this by using a known good version of pip3: install pip3 - from the docker terminal type: sudo apt update && sudo apt install pip -y downgrade pip - from the docker terminal type: pip install setuptools==58.2.0 this should fix the error; type colcon build again to successfully build the package. fix permissions we need to fix the permissions to edit files in these folders, from with vscode: change permisions on the folder - from the docker commandline type: chmod 777 -r my_py_pkg/ add a dependency to our package.xml open the package.xml - in vscode open the package.xml file within the my_py_pkg folder add the depenecy - add the following text underneath <depend>rclpy</depend> : <depend> std_msgs </depend> < previous next >