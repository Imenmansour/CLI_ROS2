ros2 tutorials #7: how to create a ros2 custom message written by alberto ezquerro  ros2 tutorials  07/10/2019 in this episode of ros2 tutorials series , you will learn how to create a simple ros2 custom message for topics. we are going to use a ros2 (dashing) installation for this, but you dont need to install ros, as we will use the ros development studio (rosds) , an online platform that provides access to ros2 and ros2 computers and other powerful ros tools within a browser! now lets get to work without further ado! step 1: create a project (rosject) on rosds head to http://rosds.online and create a project with a similar configuration as the one shown below. you can change the details as you like, but please ensure you select ubuntu 18.04 + ros2 dashing under configuration. once done with that, open your rosject. this might take a few moments, please be patient. step 2: source the ros2 workspace once the rosject is open, head to the tools menu and pick the shell tool (a terminal) and run the following command to source the workspace: user:~ source /opt/ros/dashing/setup.bash ros_distro was set to 'melodic' before. please make sure that the environment does not mix paths from different distributions. user:~ if you get that ros_distro warning, just ignore it. step 3: create a ros2 c++ package in your ros2 workspace we are creating a c++ package ( ament_cmake ) and adding dependencies rclcpp (ros c++ client) and std_msgs (in-built standard messages type, on which our new message will be based). user:~ mkdir -p ros2_ws/src user:~ cd ros2_ws/src user:~/ros2_ws/src user:~/ros2_ws/src ros2 pkg create ros2_msg --build-type ament_cmake --dependencies rclcpp std_msgs going to create a new package package name: ros2_msg destination directory: /home/user/ros2_ws/src package format: 3 version: 0.0.0 description: todo: package description maintainer: ['user <user@todo.todo>'] licenses: ['todo: license declaration'] build type: ament_cmake dependencies: ['rclcpp', 'std_msgs'] creating folder ./ros2_msg creating ./ros2_msg/package.xml creating source and include folder creating folder ./ros2_msg/src creating folder ./ros2_msg/include/ros2_msg creating ./ros2_msg/cmakelists.txt user:~/ros2_ws/src step 3: create the definition of the ros2 custom message user:~/ros2_ws/src cd ros2_msg user:~/ros2_ws/src/ros2_msg mkdir -p msg user:~/ros2_ws/src/ros2_msg cd msg/ user:~/ros2_ws/src/ros2_msg/msg touch mymsg.msg pick the ide tool from the tools menu, locate the mymsg.msg file, and paste in the following code: int32 day string month int32 year next, open up the cmakelist.txt file in the ide and add the required dependencies: add these two dependencies under #find package, right after the three that are already there: find_package(builtin_interfaces required) find_package(rosidl_default_generators required) add the following function to cmakelist.txt. this function tells the ros system to generate a new message from the specified message definition, using the specified interface. rosidl_generate_interfaces(new_msg "msg/mymsg.msg" dependencies builtin_interfaces ) next, open up the package.xml file in the ide and make the following changes: change the package format from 2 to 3, if not already 3 (in this case it was already 3): add the dependencies that complement the ones we have in cmakelist.txt : <build_depend>builtin_interfaces</build_depend> <build_depend>rosidl_default_generators</build_depend> <exec_depend>builtin_interfaces</exec_depend> <exec_depend>rosidl_default_runtime</exec_depend> <member_of_group>rosidl_interface_packages</member_of_group> step 4: compile the package whew, a couple of ingredients had to be added there; now it is time to compile the message and taste the soup! get back to the terminal and run the following commands: user:~ cd ~/ros2_ws user:~/ros2_ws colcon build --symlink-install starting >>> ros2_msg finished <<< ros2_msg [14.1s] summary: 1 package finished [14.3s] user:~/ros2_ws source install/setup.bash ros_distro was set to 'dashing' before. please make sure that the environment does not mix paths from different distributions. ros_distro was set to 'melodic' before. please make sure that the environment does not mix paths from different distributions. user:~/ros2_ws step 5: find and test the new custom message: user:~/ros2_ws ros2 msg list | grep mymsg ros2_msg/msg/mymsg user:~/ros2_ws ros2 msg show ros2_msg/msg/mymsg int32 day string month int32 year user:~/ros2_ws ros2 topic pub /test_topic ros2_msg/mymsg "{day: '7', month: 'october', year: '2019'}" publisher: beginning loop publishing #1: ros2_msg.msg.mymsg(day=7, month='october', year=2019) publishing #2: ros2_msg.msg.mymsg(day=7, month='october', year=2019) publishing #3: ros2_msg.msg.mymsg(day=7, month='october', year=2019) pick another shell from the tools menu and check the message being published ( ps: you need to source ros dashing and the workspace first): user:~ source /opt/ros/dashing/setup.bash ros_distro was set to 'melodic' before. please make sure that the environment does not mix paths from different distributions. user:~ source ros2_ws/install/setup.bash ros_distro was set to 'dashing' before. please make sure that the environment does not mix paths from different distributions. ros_distro was set to 'melodic' before. please make sure that the environment does not mix paths from different distributions. user:~ ros2 topic list /parameter_events /rosout /test_topic user:~ ros2 topic echo /test_topic day: 7 month: october year: 2019 --- day: 7 month: october year: 2019 --- day: 7 month: october year: 2019 --- day: 7 month: october year: 2019 --- day: 7 month: october year: 2019 --- day: 7 month: october year: 2019 --- ^cuser:~ great, it ran! were done here!! extra 1: rosject link get the rosject containing all code used in the post in the following link: http://www.rosject.io/l/c3f3784/ extra 2: video prefer to watch a video demonstrating the steps above? we have one for you below! related resources ros development studio (rosds) robot ignite academy ros2 full course for beginners feedback did you like this post? do you have questions  what is explained? whatever the case, please leave a comment on the comments section below, so we can interact and learn from each other. if you want to learn  other ros or ros2 topics, please let us know in the comments area and we will do a video or post  it   post edited by bayode aderinola #ros2 #ros #ros2tutorials #robot topics: ros q&a check out these related posts how to become a robotics developer may 26, 2018 updated: july 26, 2023 robotics needs developers! robotics needs software engineers and software... read more 130. the open source robotics alliance apr 8, 2024 i would like to dedicate this episode to all the ros developers out there who are thinking and... read more 129. ros2ai jan 29, 2024 i would like to dedicate this episode to all the ros developers who believe that chatgpt or... read more  older entries 5 comments anonymous on 14/10/2019 at 10:33 pm cmake error at /usr/share/cmake-3.10/modules/findpackagehandlestandardargs.cmake:137 (message): could not find fastrtps (missing: fastrtps_include_dir fastrtps_libraries) call stack (most recent call first): /usr/share/cmake-3.10/modules/findpackagehandlestandardargs.cmake:378 (_fphsa_failure_message) /opt/ros/dashing/share/fastrtps_cmake_module/cmake/modules/findfastrtps.cmake:95 (find_package_handle_standard_args) /opt/ros/dashing/share/rosidl_typesupport_fastrtps_c/cmake/rosidl_typesupport_fastrtps_c-extras.cmake:7 (find_package) /opt/ros/dashing/share/rosidl_typesupport_fastrtps_c/cmake/rosidl_typesupport_fastrtps_cconfig.cmake:38 (include) /opt/ros/dashing/share/rosidl_default_generators/cmake/rosidl_default_generators-extras.cmake:21 (find_package) /opt/ros/dashing/share/rosidl_default_generators/cmake/rosidl_default_generatorsconfig.cmake:38 (include) cmakelists.txt:17 (find_package) reply miao on 15/10/2019 at 9:28 am what if i need to include the msg file from another folder in the same package. how to equip the cmakelists and package.xml? reply anonymous on 15/10/2019 at 2:08 pm i tried to include the .msg file from other folder but got: cmake error at /home/miao/ros2_install/ros2-linux/share/rosidl_cmake/cmake/rosidl_generate_interfaces.cmake:93 (message): rosidl_generate_interfaces() the passed file msg/jointcommand.msg doesnt exist relative to the cmake_current_source_dir /home/miao/ros2_pendulum_ws/src/ros2_pendulum_pkg/minimal_publisher call stack (most recent call first): cmakelists.txt:23 (rosidl_generate_interfaces) how should i handle this problem? reply la on 06/07/2020 at 11:47 am i have the same question as miao : i tried to include the .msg file from other folder but got: cmake error at /home/miao/ros2_install/ros2-linux/share/rosidl_cmake/cmake/rosidl_generate_interfaces.cmake:93 (message): rosidl_generate_interfaces() the passed file msg/jointcommand.msg doesnt exist relative to the cmake_current_source_dir /home/la/dev_ws/src/ros2_pendulum_pkg/minimal_publisher call stack (most recent call first): cmakelists.txt:23 (rosidl_generate_interfaces) how should i handle this problem? reply reshma on 23/02/2022 at 9:38 am r r could build successfuly, but getting r could build it successfully,, but this command is giving following error, ros2 topic pub /test_topic ros2_msg/msg/string {day: 7, month: october, year: 2019} >>> [rcutils|error_handling.c:108] rcutils_set_error_state() this error state is being overwritten: failed to find library ros2_msg__rosidl_typesupport_fastrtps_c , at /tmp/binarydeb/ros-foxy-rosidl-typesupport-c-1.0.2/src/type_support_dispatch.hpp:73 with this new error message: handles typesupport identifier (rosidl_typesupport_c) is not supported by this library , at /tmp/binarydeb/ros-foxy-rosidl-typesupport-c-1.0.2/src/type_support_dispatch.hpp:116 rcutils_reset_error() should be called after error handling to avoid this. <<>> [rcutils|error_handling.c:108] rcutils_set_error_state() this error state is being overwritten: handles typesupport identifier (rosidl_typesupport_c) is not supported by this library , at /tmp/binarydeb/ros-foxy-rosidl-typesupport-c-1.0.2/src/type_support_dispatch.hpp:116 with this new error message: type support not from this implementation, at /tmp/binarydeb/ros-foxy-rmw-fastrtps-cpp-1.3.0/src/publisher.cpp:86 rcutils_reset_error() should be called after error handling to avoid this. <<< failed to create publisher: type support not from this implementation, at /tmp/binarydeb/ros-foxy-rmw-fastrtps-cpp-1.3.0/src/publisher.cpp:86, at /tmp/binarydeb/ros-foxy-rcl-1.1.13/src/rcl/publisher.c:180 reply submit a comment cancel reply your email address will not be published. comment name email website save my name, email, and website in this browser for the next time i comment. submit comment δ this site uses akismet to reduce spam. learn how your comment data is processed . pin it on pinterest share this twitter linkedin reddit facebook gmail