open in app sign up sign in write sign up sign in getting started with ros2: install and setup ros2 humble on ubuntu 22.04(lts) part 3 of our getting started with ros2 series sagar kumar  follow published in spinor  6 min read  may 15, 2024 -- listen share welcome, fellow readers, to our series getting started with ros2! in this series, we aim to provide you with a comprehensive introduction to ros 2 and will guide you through the fundamentals, its key concepts, and practical applications. if you have never used the robot operating system(ros) before, even ros 1, or if you want a practical and quick refreshment of the basics then this series is for you. feel free to explore the links provided for a more in-depth understanding of the concepts discussed. here are the articles in the series: getting started with ros2: an introduction getting started with ros2: why ros2? in our first article,  getting started with ros2: an introduction , we laid the groundwork by introducing you to the basic concepts of ros 2. in our second article,  getting started with ros2: why ros2? , we dig deeper into the rationale behind using ros 2. now, in our third article, we will guide you through the installation and setup process of ros 2. so lets get started! can i install ros2 on my system? to install ros 2, you have several options. ros 2 provides binary packages for certain os. the official ros 2 installation documentation calls them tier 1 operating systems , making installation straightforward for users of these operating systems. ubuntu linux (debian) red hat windows important notes: for macos users, the process is a bit different. ros 2 does not provide binary packages for macos, so installation requires building from the source. while this can be a more involved process, it allows macos users to use ros 2 on their systems. for raspberry pi, try to install ros 2 on raspberry pi 3 or the above models . for the safer side, use the 64-bit debian-12-based os . like raspberry pi os , ubuntu , or ubuntu mate . follow this link to install ros 2 on raspberry pi . both binary packages and building from source result in a fully functional ros 2 install, with differences based on your usage needs. installing from packages is recommended for automatic dependency management and updates alongside system updates, but requires root access. if you lack root access, consider the binary archive. can i install ros 2 using a container solution like docker? another convenient way to set up ros2 is by using docker. docker allows you to run ros2 in a containerized environment, which can simplify the setup process and ensure consistency across different systems. to install ros2 using docker, youll first need to install docker on your system. once docker is installed, you can pull the ros2 docker image from the official ros docker hub repository. from there, you can create a new docker container running ros2 and start developing within the container. using docker for ros2 development can be particularly useful when you want to isolate your ros2 environment from the rest of your system or when you need to quickly set up ros2 on a new machine without going through the full installation process. things to check before installation when installing ros 2, its recommended to install the long-term support (lts) version, as it provides a stable foundation for your development. before installation, its crucial to check the compatibility of the ros 2 version with your operating system version. this information can be found in the official documentation of the ros 2 version you intend to install. ensuring compatibility will help prevent any issues that may arise from mismatched versions. moreover, its important to verify the compatibility of your gazebo version with the ros 2 version you intend to install. you can verify it here . what os + ros 2 combination should i choose? if youre wondering which operating system to choose, ubuntu is often recommended for ros 2 development. ubuntu mate, in particular, is a great choice as it can also be installed on raspberry pi and its lightweight. this means that your desktop computer (ground control or simulation testing station) can have the same os as your raspberry pi (robot computer), simplifying compatibility and ensuring a smoother development experience. in this article series, we will use the ubuntu mate  jammy jellyfish (22.04) with ros 2 humble hawksbill (lts) combination. this will provide a stable and well-supported environment for readers to follow along with our tutorials. so, without further ado let's start the installation process. you can check the official documentation of ros2 humble installation on ubuntu. following are the steps to install ros 2 humble on ubuntu 22.04(lts) 1. set locale locale # check for utf-8 sudo apt update && sudo apt install locales sudo locale-gen en_us en_us.utf-8 sudo update-locale lc_all=en_us.utf-8 lang=en_us.utf-8 export lang=en_us.utf-8 locale # verify settings 2. setup sources to add the ros 2 apt repository, ensure the ubuntu universe repository is enabled. sudo apt install software-properties-common sudo add-apt-repository universe add the ros 2 gpg key with apt. sudo apt update && sudo apt install curl -y sudo curl -ssl https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg then add the repository to your sources list. echo "deb [arch=(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu (. /etc/os-release && echo ubuntu_codename) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null 3. install ros 2 packages after setting up the repositories, update your apt repository caches. this ensures your system is up to date before installing ros 2 packages. sudo apt update sudo apt upgrade now there are two options for ros 2 desktop install (recommended): includes ros, rviz, demos, and tutorials. provides a complete desktop environment for ros development. sudo apt install ros-humble-desktop ros-base install (bare bones): includes communication libraries, message packages, command line tools. does not include gui tools, suitable for minimalistic setups. sudo apt install ros-humble-ros-base we will install the  ros-humble-desktop  on the ground control and simulation system(our desktop/laptop) and the  ros-humble-ros-base  on the robot computer(raspberry pi). finally, install the development tools: compilers and other tools to build ros packages. sudo apt install ros-dev-tools 4. environment setup to start working on ros 2, first, you need to source the setup script in each terminal session. # replace ".bash" with your shell if you're not using bash # possible values are: setup.bash, setup.sh, setup.zsh source /opt/ros/humble/setup.bash 5. try some examples note: the examples are only included in the desktop install. talker-listener in one terminal, source the setup file and then run a python talker: source /opt/ros/humble/setup.bash ros2 run demo_nodes_py talker in another terminal source the setup file and then run a python listener: source /opt/ros/humble/setup.bash ros2 run demo_nodes_py listener how it looks like: talker-listener demo scripts stop both scripts using ctrl+c. 6. bonus step! to automate the environment setup process and avoid sourcing the setup file manually each time, we can add the command to source the setup file in the  .bashrc  file. this way, the command will be executed automatically every time we open a new terminal or ssh session. this is how we can edit the .bashrc nano ~/.bashrc and add the command `source /opt/ros/humble/setup.bash` in the end of the file. edit .bashrc and add the source command we can also whats next? in the next article, we will discuss the concepts such as workspaces and nodes. workspaces are essential for organizing and building ros 2 packages, while nodes are the individual processes that perform computation in ros 2. understanding these concepts will be crucial as we progress in our journey with ros 2 development. if youve made it this far, it means youre not just interested  youre committed, and were delighted to have you here! your interest and engagement inspire us to create more content and share knowledge with fellow learners, the community of robotics, and tech enthusiasts who share our passion. so, thank you for being a part of this journey with us. stay tuned for more insightful articles, tutorials, and practical examples as we continue our exploration of ros 2 together. additional reading ros 2 humble installation ros2 robotics robot operating system raspberry pi gazebo follow written by sagar kumar 53 followers  editor for spinor sagar is a computer vision and robotics expert with a focus on perception & localization | twitter: twitter.com/sagarcadet | linkedin: linkedin.com/in/sagark30 follow help status  careers press    text to speech teams