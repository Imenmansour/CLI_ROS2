close search the ros 2 foxy content sharing extensions these extensions help you snap ros 2 applications for the foxy fitzroy distribution using the content-sharing feature. note that this set of extensions are based on the ros2-foxy extension. therefore, they are applied on top of the ros2-foxy extension. see ros2-foxy for more information. this extension requires snapcraft 8.x+. how to use it add extensions: [ ros2-foxy-<metapackage> ] to the application definition in your snapcraft.yaml file, where  <metapackage>  is one and only one of: ros-core ros-base desktop for instance, extensions: [ ros2-foxy-ros-core ] . see ros 2 applications for a complete tutorial on how to use this extension. apps: colcon-ros2-foxy-rlcpp-hello: command: ros2 run colcon_ros2_rlcpp_hello colcon_ros2_rlcpp_hello extensions: [ros2-foxy-ros-base] ... what it does for the build-time environment everything the ros2-foxy extension does. adds ros-foxy-ros-environment , ros-foxy-ros-workspace , ros-foxy-ament-index-cpp & ros-foxy-ament-index-python to the stage-packages . adds a content plug mounting the provider snap content at snap/opt/ros/underlay_ws and defines a default provider. sets the cmake_system_prefix_path variable to point at the mounted system path. adds the build snap providing the build-time equivalent of the default content-sharing provider snap to ros-build-snaps . this implies that you can avoid declaring as build-packages all the ros 2 packages that are found inside the ros 2 metapackage corresponding to the extension name used above. what it does for the run-time environment everything the ros2-foxy extension does. expands the runtime environment required by ros 2 to include the ros 2 workspace provided by the content-sharing snap. similar to the typical chaining of ros 2 workspaces. warning: this extension is currently marked as experimental. we enable experimental extensions by setting the environment variable: snapcraft_enable_experimental_extensions to 1 . further reading for an example of this extension being used, see the using content-sharing with core20 section of the ros 2 applications page. for a complete picture of what this extension does, add it to your app definition and run snapcraft expand-extensions . snapcraft extensions enable snap developers to easily incorporate a set of common requirements into a snap. see snapcraft extensions for further details. last updated 8 months ago. help improve this document in the forum .