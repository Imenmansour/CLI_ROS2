ros 2 intro - nodes learn step 6 of 12 workspaces, packages, setup.bash, underlay, overlays, building the ros 2 program (python / c++) back next 1 info ros 2 intro - nodes: what youll learn in this module 2 info get the hadabot software stack up and running 3 code prep to code a ros 2 node (python / c++) 4 code implement and run a ros 2 node (python) 5 code implement and run a ros 2 node (c++) 6 learn workspaces, packages, setup.bash, underlay, overlays, building the ros 2 program (python / c++) 7 learn life of a ros 2 program (python / c++) 8 learn how the ros 2 node code works (python) 9 learn how the ros 2 node code works (c++) 10 experiment use the ros 2 cli to inspect ros 2 nodes 11 learn what is the ros 2 cli 12 info ros 2 intro - nodes: congrats! hide the lesson below many be confusing. so we'll first start with a summary omitting ros nomenclature: the prep step source /opt/ros/foxy/setup.bash command sets up your bash terminal to work with ros 2 colcon is ros 2's build tool. after colcon build successfully builds your source code, the source install/setup.bash command sets up your terminal so the ros system can find the newly compiled ros programs you just wrote. now on to more details if you like... build ros 2 with colcon as you may have deduced, colcon builds our ros 2 programs. some more ros-speak - we call the root folder hadabot_ws a ros 2 workspace . calling colcon build from the hadabot_ws directory will build all the ros 2 packages defined under the hadabot_ws/src folder. our hadabot_ws specifies 2 ros packages - (1) m01_pkg_py (a python-based package ) and (2) m01_pkg_cpp (a c++-based packages ). each of the package directories includes meta and source files that help the ros 2 system know how to compile and setup the package. before we worked on anything ros 2 related if you recall, we prepped our bash terminal for coding, with the source /opt/ros/foxy/setup.bash command. this source... command sets up the environment of the bash terminal so we can work on ros 2 'stuff'. this includes path and env variables to find: command line tools (ie the ros2 command line interface cli tool). libraries needed by colcon to compile and run the ros 2 programs. other ros 2 programs from other ros 2 packages installed on our system. the sourcing of the system's /opt/ros/foxy/setup.bash script sets up what ros specifically calls the underlay . it is the 'underlying', environment variables to prep your ros 2 environment. after we compile our ros 2 workspace yes there is also a concept of a ros 2 overlay . the overlay are the ros 2 components you compiled and set up in the hadabot_ws workspace you are working on. we set up the overlap by calling the source install/setup.bash command after our colcon compile succeeded. upon colcon 's successful compile, it creates a hadabot_ws/install folder with all the libraries and program executables specified by the packages in the workspace. the source install/setup.bash sets up a new set of environment variables for the hadabot_ws ros 2 programs that you wrote this new set of environment variables to help find the ros 2 programs and libraries you wrote is called the overlay . back next