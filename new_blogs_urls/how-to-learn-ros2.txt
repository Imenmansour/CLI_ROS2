skip to content so, youve decided to learn ros2. great! and now, you wonder where to start. thats quite normal to feel lost at the beginning. ros is not an easy subject. its big and diverse, and you wont become an expert in 2 days. in this post ill give you some tips  what you should focus on to gain practical knowledge quickly. >> oh and if you just want to get started right now with a practical crash course, watch this video! after watching the video, subscribe to the robotics back-end youtube channel so you dont miss the next tutorials! you want to learn ros2 efficiently? check out ros2 for beginners and learn ros2 step by step, in 1 week. table of contents toggle what is ros2? (very quickly) the first confusion comes here: ros means robot operating system, but its not an operating system. you may have heard words such as middleware or framework. well, yes its something like that. it provides a framework that developers (you) can follow to write scalable, distributed robotics applications, without reinventing the wheel. ros2 is the successor of ros1. its a completely new version of ros, but using the same core concepts. explaining what is ros exactly would be quite long and complicated. instead, lets see what you get from ros. as you make progress, every day youll gain more understanding of what is ros. ros mainly brings you 4 things: a framework to help you create a distributed application, with communication between the subparts (nodes) of your application. tools to help you develop your robot faster: logging, 3d visualization, graphs, plotting, etc. 3rd party plugins containing complete functionalities, that you can easily plug to your application. an online community focused on open source robotics projects. why should you learn ros2? well, ros2 can help you in many ways: this will help you write more robust, modular, and scalable robotics applications. you dont need to reinvent the tooling and plumbing. just focus on the core of your application, ros2 takes care of the rest. when you know how to develop with ros, you can easily switch between projects in no time. you worked on a mobile base, and now youre writing a software for a drone? well, no problem, you can use the same foundation for both robots. ros2 will speed up development time for your robotics projects, especially during prototyping and testing phases. ros2 will help you get a foot into the robotics world. you can experiment with many existing robots (in real world or simulation). more and more companies hire ros developers. this is a good opportunity for you!  ill stop the list here, but theres definitely more to it! prerequisites to learn ros2 in order to learn ros2 you need to have some existing knowledge in computer science and programming. no need to be an expert, but if you know nothing  programming youll be lost. first you need to know how to use a terminal and command line tools. its better if you have already used an unix os such as ubuntu. then you need some programming basics. the main 2 languages for ros2 are python and cpp. you can totally start with only one language and build a ros2 project. but in the end it will be better to know both cpp and python, as both will be required to create a complete and efficient application. if you only know python, no problem: just start with it, learn ros2, and later on you can learn cpp and see how to use it with ros2. if you know cpp (intermediate level), i assume you can handle python, at least the basics. all in all, nothing replaces a strong programming foundation, no matter which language you use. this is maybe the best investment you can make on yourself before you learn ros2. start with the basics and ros2 core functionalities the first thing youll need to do is to install ros2 and set up the environment. then, to me, the best way to start is to go hand in hand with: experimenting with existing ros2 projects and seeing how they work to understand the concepts. starting to write your own code to understand how to apply the concepts in your own application. here are the main concepts and tools youll need to learn: packages nodes topics services actions parameters launch files and while you learn that, youll also learn how to: build your nodes. execute them. use command line tools. debug with plugins, such as rqt_graph. etc. for your first practice exercises, there is an overly simplified robotics project you can use: ros2 turtlesim. this is just a 2d simulation of a mobile robot (with a turtles shape), and its perfect to learn basic concepts. explore intermediate subjects and tools once youre confident with the ros2 core, you have a good foundation that you can use in any ros2 project. with this knowledge you can already write a complete application. now, lets go further. first, you can continue working on more advanced core ros2 functionalities: components lifecycled nodes running different nodes on multiple machines 3d visualization tools such as rviz, gazebo tf etc. there is no particular order, and the complete list is much, much longer. from here what you learn mostly depends on the situation and your projects. if you want/need to progress on slam for mobile robots, or on robotic arm manipulation, or even on integrating a camera in a drone, well, that will require a different learning path. you cant learn everything, youll have to choose what knowledge you need first. one great thing with ros: you can start using real robots without actually having to buy the hardware. for example, you can run a complete simulated environment with the turtlebot3 robot. this robot is a mobile base capable of slam and navigation. for any common robotics application you can find an existing open source project with ros. create your own ros2 project only one way you can truly improve in ros after having an intermediate level: create your own ros2 project. this may be for a complete new custom robot, or you could work on improving an existing package. you could wrap a non-ros code base in order to connect a robot to the ros ecosystem. possibilities are endless. but one thing is certain: working on a project is one of the best ways to learn more. share with the ros2 community ros2 is open source, and one of its main strengths is the community behind it. dont hesitate to read other peoples code. youll find many ros2 packages available on github. whether they have a permissive license or not, nothing prevents you from reading the code to learn more. thats a great way to improve. also, dont hesitate to share your own work, on github, forums, etc. you may get invaluable feedback on your code, and see if what you tried to do could be interesting for other people as well. ros2 online course  learn ros2 step by step one problem many people have when learning ros2 is that there is no clear path. so you have to find that path by yourself, and this takes time. youll need to spend many hours experimenting, searching for documentation on the internet. which is great if you have plenty of time and want to go the hard way, learning all by yourself. but what if you dont have a lot of time or if you prefer to be guided while learning? well, i have created an online course to learn ros2, with this in mind: teaching you the most important things, step by step, and always with a practical view. this will help you get started much quicker without the pain of always searching what you should learn next. > start learning ros2 now ! < learn ros2: time for you to start learning ros2 will be quite a journey, but a journey that is worth the time investment. what youve seen in this post is what you need to know in order to call yourself a ros developer. start with the fundamentals, experiment on other ros robots, and then continue your learning depending on what project youre working on. now its time for you to take action. no matter how you want to learn: all by yourself, with books, online courses, workshops, and so on, the important thing is that you make some real progress. well, time for me to wish you a happy ros2 learning! want to learn how to program with ros2? don't miss this opportunity: [new] ros 2 book or, learn with a video course want to learn ros2? [new] ros 2 book or, learn with a video course we use s on our website to give you the most relevant experience by remembering your preferences and repeat visits. by clicking accept all, you consent to the use of all the s. however, you may visit " settings" to provide a controlled consent.  settings accept all manage consent close  overview this website uses s to improve your experience while you navigate through the website. out of these, the s that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the ... necessary necessary always enabled necessary s are absolutely essential for the website to function properly. these s ensure basic functionalities and security features of the website, anonymously.  duration description lawinfo-checkbox-analytics 11 months this  is set by gdpr  consent plugin. the  is used to store the user consent for the s in the category "analytics". lawinfo-checkbox-functional 11 months the  is set by gdpr  consent to record the user consent for the s in the category "functional". lawinfo-checkbox-necessary 11 months this  is set by gdpr  consent plugin. the s is used to store the user consent for the s in the category "necessary". lawinfo-checkbox-others 11 months this  is set by gdpr  consent plugin. the  is used to store the user consent for the s in the category "other. lawinfo-checkbox-performance 11 months this  is set by gdpr  consent plugin. the  is used to store the user consent for the s in the category "performance". viewed__policy 11 months the  is set by the gdpr  consent plugin and is used to store whether or not user has consented to the use of s. it does not store any personal data. functional functional functional s help to perform certain functionalities like sharing the content of the website on social media platforms, collect feedbacks, and other third-party features. performance performance performance s are used to understand and analyze the key performance indexes of the website which helps in delivering a better user experience for the visitors. analytics analytics analytical s are used to understand how visitors interact with the website. these s help provide information on metrics the number of visitors, bounce rate, traffic source, etc.    s are used to provide visitors with relevant ads and  campaigns. these s track visitors across websites and collect information to provide customized ads. others others other uncategorized s are those that are being analyzed and have not been classified into a category as yet. save & accept learn ros2 in a week check out the course here